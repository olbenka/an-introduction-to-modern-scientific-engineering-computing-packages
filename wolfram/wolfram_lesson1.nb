(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    322724,       7003]
NotebookOptionsPosition[    317885,       6844]
NotebookOutlinePosition[    318265,       6860]
CellTagsIndexPosition[    318222,       6857]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "6"}], " ", "+", " ", 
     RowBox[{"2", 
      RowBox[{"x", "^", "5"}]}], " ", "+", " ", 
     RowBox[{"2", 
      RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
     RowBox[{"3", 
      RowBox[{"x", "^", "2"}]}], " ", "-", " ", 
     RowBox[{"4", "x"}], " ", "-", " ", "4"}], " ", "=", " ", "0"}], ",", " ",
    "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.890703656062132*^9, 3.8907036575349407`*^9}, {
  3.8907037262636986`*^9, 3.8907038348693547`*^9}, {3.890703869290765*^9, 
  3.890703872514575*^9}, {3.8907039112698464`*^9, 3.8907039119875174`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Plus\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\(\\(-4\\)\\) - \\(\\(4\\\\ x\\)\\) + \\(\\(3\\\\ \
x\\^2\\)\\) + \\(\\(2\\\\ x\\^3\\)\\) + \\(\\(2\\\\ x\\^5\\)\\) + x\\^6\\)\
\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907039201939325`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "naqs"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0\\)\[NoBreak] is not a quantified system \
of equations and inequalities. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \\\"Solve::naqs\\\"]\\)\"\
\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907039201939325`*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"0", ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.8907039202095876`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"z", "^", "2"}]}], " ", "+", " ", 
   RowBox[{"b", " ", "z"}], " ", "+", " ", "c"}], " ", "/.", " ", 
  RowBox[{"z", "\[Rule]", " ", 
   RowBox[{"2", " ", 
    RowBox[{"c", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sqrt", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", "^", "2"}], " ", "-", " ", 
          RowBox[{"4", "a", " ", "c"}]}], ")"}]}], " ", "-", " ", "b"}], 
      ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.8907039997287397`*^9, 3.8907040790927114`*^9}}],

Cell[BoxData[
 RowBox[{"c", "+", 
  FractionBox[
   RowBox[{"4", " ", "a", " ", 
    SuperscriptBox["c", "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "b"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}], ")"}], " ", "sqrt"}]}], ")"}], 
    "2"]], "+", 
  FractionBox[
   RowBox[{"2", " ", "b", " ", "c"}], 
   RowBox[{
    RowBox[{"-", "b"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["b", "2"], "-", 
       RowBox[{"4", " ", "a", " ", "c"}]}], ")"}], " ", 
     "sqrt"}]}]]}]], "Output",
 CellChangeTimes->{3.8907040826492057`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     RowBox[{"z", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"b", " ", "z"}], " ", "+", " ", "c"}], " ", "/.", " ", 
   RowBox[{"z", "\[Rule]", " ", 
    RowBox[{"2", " ", 
     RowBox[{"c", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"sqrt", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b", "^", "2"}], " ", "-", " ", 
           RowBox[{"4", "a", " ", "c"}]}], ")"}]}], " ", "-", " ", "b"}], 
       ")"}]}]}]}]}], " ", "//", " ", "Simplyfy"}]], "Input",
 CellChangeTimes->{{3.8907036798223925`*^9, 3.8907037064446115`*^9}, {
  3.890704102469515*^9, 3.8907041183425193`*^9}}],

Cell[BoxData[
 RowBox[{"Simplyfy", "[", 
  RowBox[{"c", "+", 
   FractionBox[
    RowBox[{"4", " ", "a", " ", 
     SuperscriptBox["c", "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["b", "2"], "-", 
          RowBox[{"4", " ", "a", " ", "c"}]}], ")"}], " ", "sqrt"}]}], ")"}], 
     "2"]], "+", 
   FractionBox[
    RowBox[{"2", " ", "b", " ", "c"}], 
    RowBox[{
     RowBox[{"-", "b"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["b", "2"], "-", 
        RowBox[{"4", " ", "a", " ", "c"}]}], ")"}], " ", "sqrt"}]}]]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.890704119645893*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.890704127081181*^9, 3.8907041524630346`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "7"}], " ", "+", " ", "x", " ", "-", " ", "1"}], 
     ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "2"}], " ", "-", " ", "4"}], ")"}]}], " ", "\[Equal]",
    " ", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.890704196316944*^9, 3.8907042308367825`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "#1", "+", 
         SuperscriptBox["#1", "7"]}], "&"}], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "#1", "+", 
         SuperscriptBox["#1", "7"]}], "&"}], ",", "2"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "#1", "+", 
         SuperscriptBox["#1", "7"]}], "&"}], ",", "3"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "#1", "+", 
         SuperscriptBox["#1", "7"]}], "&"}], ",", "4"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "#1", "+", 
         SuperscriptBox["#1", "7"]}], "&"}], ",", "5"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "#1", "+", 
         SuperscriptBox["#1", "7"]}], "&"}], ",", "6"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "#1", "+", 
         SuperscriptBox["#1", "7"]}], "&"}], ",", "7"}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8907042320000343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", 
  RowBox[{"N", "[", "%", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "\:043e\:0431\:0440\:0430\:0449\:0435\:043d\:0438\:0435", " ", "\:043a", 
    " ", "\:043f\:0440\:0435\:0434\:044b\:0434\:0443\:0449\:0435\:043c\:0443",
     " ", "\:0432\:044b\:0432\:043e\:0434\:0443"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.890704236868287*^9, 3.890704264183286*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.`"}], ",", "2.`", ",", "0.7965443541284571`", ",", 
   RowBox[{
    RowBox[{"-", "0.9798083844899014`"}], "-", 
    RowBox[{"0.5166768838399121`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9798083844899014`"}], "+", 
    RowBox[{"0.5166768838399121`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.12376188051147738`"}], "-", 
    RowBox[{"1.0566500111970738`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.12376188051147738`"}], "+", 
    RowBox[{"1.0566500111970738`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.7052980879371502`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.6376237698062315`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.7052980879371502`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.6376237698062315`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.890704266774285*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Clear"], "Input",
 CellChangeTimes->{{3.890704933269167*^9, 3.8907049553948092`*^9}}],

Cell[BoxData["Clear"], "Output",
 CellChangeTimes->{3.890704956695134*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.89070496126865*^9, 3.8907049767626023`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pts", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "3"], "-", "2"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         FractionBox[
          SuperscriptBox["y", "2"], "4"], "-", "2"}], "\[Equal]", "0"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox["2"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox["2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SqrtBox["127"], "8"]}], ",", 
     FractionBox["1", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SqrtBox["127"], "8"], ",", 
     FractionBox["1", "4"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8907049925822687`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{"pts", ",", " ", 
    RowBox[{
     RowBox[{"#", " ", ">", " ", "0"}], " ", "&"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:0431\:0435\:0440\:0435\:0442", " ", 
     "\:044d\:043b\:0435\:043c\:0435\:043d\:0442", " ", 
     "\:0441\:043f\:0438\:0441\:043a\:0430", " ", "\:0438", " ", 
     "\:043f\:0440\:043e\:0432\:0435\:0440\:044f\:0435\:0442", " ", 
     RowBox[{
     "\:0443\:0441\:043b\:043e\:0432\:0438\:0435", ".", " ", "\:043d\:043e"}],
      " ", "\:0437\:0434\:0435\:0441\:044c", " ", 
     "\:0441\:043f\:0438\:0441\:043e\:043a", " ", 
     "\:0441\:043f\:0438\:0441\:043a\:043e\:0432"}], ",", " ", 
    RowBox[{
    "\:043f\:043e\:044d\:0442\:043e\:043c\:0443", " ", 
     "\:043e\:0442\:0432\:0435\:0442", " ", 
     "\:043f\:0443\:0441\:0442\:043e\:0439"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8907050089276695`*^9, 3.8907050629917364`*^9}, {
  3.8907050938113537`*^9, 3.8907050961012697`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.8907050292417765`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"pts", ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", "0"}], " ", "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8907051293741055`*^9, 3.8907051385221405`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox["2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SqrtBox["127"], "8"], ",", 
     FractionBox["1", "4"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8907051419316607`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "3"], "-", "2"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       FractionBox[
        SuperscriptBox["y", "2"], "4"], "-", "2"}], "\[Equal]", "0"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1.4", ",", "1.42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "0.2"}], ",", "0.3"}], "}"}], ",", 
   RowBox[{"ContourStyle", " ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "Green", ",", 
      RowBox[{"Point", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"pts", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", "0"}], " ", 
          "&"}]}], "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.890704290405509*^9, 3.8907043176606717`*^9}, {
  3.890705164538082*^9, 3.890705180958388*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxN1Qk0VWsbwHFJRaSQNJkinzIkioSelC6VSplukSZzIg2KDKXITEfIPFYy
Z8z4mscM5yBj3aYbTiNpu25Xfc+xVk57Lcv6rbX3OWfv/bzvX/K00xErTg4O
jn78Y/138n6juTmLgpho1tFC0kK8t3zOoKDUUf7JvORm0uLhMu/xIwpaes4y
ze42ESJGdvugewppO5IvNJFxt+NMczT3ZYNFlw2aiPjnIhnFdAqONriYBW5t
JFfqOFa8eEiB3t8mQtlvGsjbtMwDPGgX1umLGkiBbIvpxwcUDKbJXuAeqSdb
pgYW1KPPf2ceq8ivJ4OCkdvr71NQQGvO5fStIxz6AX0b0G/lql7LVdUS7l7G
3wVpFLSVLjJJEqgliee1FvelUsC1LTfMO6eaiObIjlWiRWayZB/5VZObrwRE
89FHWF9/uZpwx6cm3UMXlup26ehUk72fRcTHUvD3DI2/u9VWSRqFe09FoK83
mLo3mFaQrMq6cWX0hMjHiNfGZWTBq3+sBNBqVmr0SVopsTLR3NSUTIGZO+uC
EnLf3UE1Ge1jl7fh4MNikhEXxbMfvexghlF5awFJuPa+eTtaVYV1FJCw0qbj
m9HZ4yG+TXX5ZDEziZ+ZhM+7QTmk73M22bLLZuNbNOcRx8NaRtlkYrcE7Q1a
ukdbtEc7m8S+W8PPcsDKKI8JuWwiu1/zYgm6uSHY0aY8jQxHpT0vRA+xThdN
I9MDLisL0D+XZIZdd04lnkn3D6WiR3k9nvhlRhG/IknuFNbnnxgXPjEeQbRt
TrkmoyemfuqVyd0lArdOBCegS/ZFOvtzuJDbfzpYsxw2+3vOEVlhPiuW7101
E7H/Zk5yY6194tG15o71Ej7+YKd59ADLHLPnB0PoX3bhcehjDiky8j5hwNn2
rD8c/Vw03XlHZwJUra0UoKH3zr6/JLjEvMwIQStUdptI0ZIhYwrOuaBdFdP2
aSulw8oiB+7zaNrsfD8Czl7RWCv0n0Ya4d5qmcCsmubSQvsVyA0XG+TBwhpN
343oT8KsG34MqW45j3jRdTIKWeFl+UCzSON8k0iBxgVTM3OTQlj137yXhWjB
2edTBKmvN/dao6dXcHskyDyBFcadiRboAVF7LU2zJ/BK8o49J1o1/eb29Jtl
4BpGT65PoEDyxyqzK+XloDCT3MeLbqrplX3xowo+f6xyW4g2Y328MIEUIcn8
+WiiNvZ9rwSBy2e4hGbiKTClKbV5qRKYmcn9QxzN1f82sVemBrrrru0pjKNg
J+t199TARgnVCF/0FjoHURauhf9UWh3F0UZy6b6r0mvh5bCNyLJYXC9BEOy7
sB5eP9CIXoDOFgrXXipcDxz3Fq3+GUMBY3Z+6qGCsyKrH70u58TGYL16OG9d
19oVjZ//YsxnwqEBrs8X3Dh4jwJLa9bRCNG875t90DOL5R96FDTCfpO2NVJo
riiP6RsLmuDn4RslMlFopeEEc2YTHLnkULAtkgIqIPefgNxmEO8/oFkUgfvR
2k9f+gVboLhTEe+Igu/DzztV7Fvg8TXySfkuBSG8P98rKbZCzrj0syXh+H5Z
l//TCqftxAyTaRRcfe08Gq7VBpJ7adJ70febLZa7nW+D/CH7vnl38HrjS8/E
dz2FQZtjhgGh+Pxzk37UirZDUO03WXO0qc30vrpt7aArP+5jjN7lmFWTptkO
0/FWD/XRq2fnuR32//VcJTaYgkvnXm1Rl++AKY2jCk5BeP/caidvkw7g+bDt
4LNAXC+++hYBQp2glfd18WgABVmsnxvQCaeLKjZ7+1NwjnMm8YdwF+SNTEtv
9qOgoZCeZmXdBafcK8763aaAWT2UuySwC9pZj8OXAqgpK3pDuiDgO7P3ENqR
ex3ft44ueP/1wtJuHwoS+VkbSxd4vz/8RAztnpUYkMFPB2aQzoTVLQrkLXfb
btxCh22zc0pB8roNJ2ZM6FBf2fLfZW8KrHmd2jmi6OBvt3STww0KDgYeWX2z
hQ6pkiM7yq9T4CRhtGh6jA6dxW5rPNF87wqFCEUH10uSZzjQY6xtjZ8Bf75Y
WaPjhe971GtGWIkBu7anOHh6UqBN11vmbMgA/th9uzs8KIjeurakwYkBthkc
MW7uFOxWPizok8MAofbYaA60ioip8lQtA1yX5+i+cqNALFi4b/04A2gmPC6O
6AGugYNHF3aDRsznx6dd8fzZoxs0Bz5eEaOx+zc0w6mnjF7b9mBv5e0W8ms+
/HUe9ahfaCHrY4b6g3CePpKol0cPNBPd4Gize3fZ/TM02dn/HO2VOK/XnbeJ
/JpPqzLdk+25jeS95EySNM7zO3+1FfdrGsjnSwaNzyLZPRTek+l5Eud/6Yvp
gj1O9eTX+vDcN29vZ3AdmXIeyQxDW7cWXK0XqiMuV+Q6B+6xe6gQvcegENff
J93pQ1dzakjigcJD83F96k9UGM3XrSHbZUY9k2PY/eueKCxsRq9UyNmyS6ua
/Fr/i64NeKWkEhJyX8ipHZ1uXHM1wauSiD0NHlKIY/fQ1EJ+qgb9oLHzX7uz
ZeT4Gs0O1v5TJVHcpSZeSk70X5zvFc/u4RKpoIspaNrAS7k3aiXk1/4VLN3d
wsgvIoHjia7ncH+r3qrt2/26gBgq7h6/m8Du41jvppYBdISFQajJ4GOSePGw
pQTup3pyi0VW2eYRWPY91ymR3cOhrEnFEvRIIqfUgPcjor9mcHQQHWl05lWU
w0MixT12aOlvPaxVeO0tj7Z6sUzi49NkMln3KNgS/dYuUaxBJZr8EF5Cv/hb
D08yh4Tc0WauBY0/tcOJ36orp2LQC1NmpLptXUiXuo1K/G89lKFNjLD6Nmqn
KBF00pw8uW1oF4q+0TvZW9PjB7EXp1wCf+uhcr3qJ2+0hPOSB5fW34GHD4sN
DqM11rWln90UD+Z1lbE7fuvhER/DAFF0f/OhWunJFGhytZdj4v0aN7uFfnV9
ACs2lCUXJ7J7GK1xa+YkOpdH1O7ZeDbsiBULNESn93WGTYbmQFPaB7+vCewe
Jmh4DJSgNZ4p8X/wzp/rj67kX5wZ7UXA45FyfAqtZDKddXG0CFz0jAy+xbP7
2OQqKPcFreH5yct/QTEkF/tWiKLd49eveCxTCuofbOjlcew+6nZYBm9GiwxW
RHzRrQDhmG51b5xHzkNVkbFnquC0b7eCbiy7jzk6La4q6IZ1eiIaB8hczxi7
V06pZxKo0lrLI43zbtZKVuSvqQHTV66boqLZfSyzOxO0EF26P3Vbu0/tXJ8m
Oye0zULrQEDRnmMY12dAz9bzhX/XgVDfzk+ZUewebp3fu+8+rmc9j2/r12g2
gLh6soEr+n98XMGjdg0QOCCk6xPB7qF6eb7mafSMpUv2sF/jXM9yIty+meY3
Agdz6vFy3E+slz997tDeBJqCFuulwtk9DIk9dq0S9yfeL5saHBe3zPWs6G2k
7mrHFng+bLv5OPbMdnUc7ejOVmhMP3/DJ4zdQ+0u25OT2Ksxy6HhGKe2ub51
xzD5j460QdzTEP+bIRTsyaPfjbr3FFTFpXSygtl9Y7gvleZFV3umDWWVt8/1
Ldvsp4iwQgcMNgkmBGLfYNf1aqWBDhgZ32kS9VvfbMMDjy9AbzwnO3ZhnN07
0QtT9vzruyB6cKr6KvauPYrrroV3F+SE+if9cZvdL3dBPol32LfJH/zzMnjo
c/1zltev3CpFhzh7/acHsG9dM8bh5SH0ud7dmXRY9yCeDmeu6fCV3WT3SEg0
UiAPfeMPnY95Aoy5/r3YwGc3fzkD/rt6619r9OXllWOisgzgcrGm8WEP6ZFt
t61ojLn+qZ6h9HdReP20MaclWt/OK0BcoBsMmeLW417s/vwfULMDfQ==
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[1, 0, 0], Thickness[Large], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112}]},
      RowBox[{
        RowBox[{
          RowBox[{"-", "2"}], "+", 
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "3"]}], "\[Equal]", "0"}]],
     Annotation[#, -2 + $CellContext`x^2 + $CellContext`y^3 == 0, 
      "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0, 0, 1], Thickness[Large], 
       LineBox[{113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
        125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
        139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
        153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 
        167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 
        181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 
        195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 
        209, 210, 211, 212, 213, 214, 215, 216}]},
      RowBox[{
        RowBox[{
          RowBox[{"-", "2"}], "+", 
          SuperscriptBox["x", "2"], "+", 
          FractionBox[
           SuperscriptBox["y", "2"], "4"]}], "\[Equal]", "0"}]],
     Annotation[#, -2 + $CellContext`x^2 + Rational[1, 4] $CellContext`y^2 == 
      0, "Tooltip"]& ]}],
  AspectRatio->1,
  Epilog->{
    PointSize[Large], 
    RGBColor[0, 1, 0], 
    PointBox[
     NCache[{{2^Rational[1, 2], 0}, {Rational[1, 8] 127^Rational[1, 2], 
        Rational[1, 4]}}, {{1.4142135623730951`, 0}, {1.4086784586980805`, 
       0.25}}]]},
  Frame->True,
  PlotRange->{{1.4, 1.42}, {-0.2, 0.3}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.890705191351844*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.890705225269035*^9, 3.8907052269277763`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rts", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "2"}], " ", "y"}], " ", "+", " ", 
         RowBox[{"x", " ", 
          RowBox[{"y", "^", "2"}]}]}], " ", "=", " ", "2"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "3"}], " ", "y"}], " ", "+", " ", 
         RowBox[{"x", " ", 
          RowBox[{"y", "^", "3"}]}]}], " ", "=", " ", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.89070524199477*^9, 3.8907052829499226`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Plus\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\(\\(x\\^2\\\\ y\\)\\) + \\(\\(x\\\\ \
y\\^2\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.890705284167963*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Plus\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\(\\(x\\^3\\\\ y\\)\\) + \\(\\(x\\\\ \
y\\^3\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.890705284167963*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "naqs"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(2 && 3\\)\[NoBreak] is not a quantified \
system of equations and inequalities. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \\\"Solve::naqs\\\"]\\)\"\
\>"}]], "Message", "MSG",
 CellChangeTimes->{3.890705284167963*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(Solve[\\(\\(\\(\\({2, 3}\\)\\), \
\\(\\({x, y}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.890705284167963*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}], "/.", "\[VeryThinSpace]", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.890705284183584*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rts", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "2"}], " ", "y"}], " ", "+", " ", 
         RowBox[{"x", " ", 
          RowBox[{"y", "^", "2"}]}]}], " ", "==", " ", "2"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "3"}], " ", "y"}], " ", "+", " ", 
         RowBox[{"x", " ", 
          RowBox[{"y", "^", "3"}]}]}], " ", "==", " ", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.89070534976092*^9, 3.8907053519922256`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8907053536940165`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "rts", "]"}]], "Input",
 CellChangeTimes->{{3.8907054575423713`*^9, 3.8907054828320894`*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.89070548522272*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yts", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "^", "2"}], " ", "y"}], " ", "+", " ", 
          RowBox[{"x", " ", 
           RowBox[{"y", "^", "2"}]}]}], " ", "==", " ", "2"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "^", "3"}], " ", "y"}], " ", "+", " ", 
          RowBox[{"x", " ", 
           RowBox[{"y", "^", "3"}]}]}], " ", "==", " ", "3"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], " ", "//", 
   "ToReal"}]}]], "Input",
 CellChangeTimes->{{3.890705557511182*^9, 3.8907055683649144`*^9}}],

Cell[BoxData[
 RowBox[{"ToReal", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"8", "-", 
          RowBox[{"9", " ", "#1"}], "-", 
          RowBox[{"18", " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       FractionBox["1", "38"], " ", 
       RowBox[{"(", 
        RowBox[{"9", "+", 
         RowBox[{"124", " ", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}]}], "-", 
         RowBox[{"48", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
           "3"]}], "+", 
         RowBox[{"70", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
           "4"]}], "-", 
         RowBox[{"36", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
           "5"]}]}], ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"8", "-", 
          RowBox[{"9", " ", "#1"}], "-", 
          RowBox[{"18", " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], ",", 
      RowBox[{
       FractionBox["1", "38"], " ", 
       RowBox[{"(", 
        RowBox[{"9", "+", 
         RowBox[{"124", " ", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}]}], "-", 
         RowBox[{"48", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
           "3"]}], "+", 
         RowBox[{"70", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
           "4"]}], "-", 
         RowBox[{"36", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
           "5"]}]}], ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"8", "-", 
          RowBox[{"9", " ", "#1"}], "-", 
          RowBox[{"18", " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], ",", 
      RowBox[{
       FractionBox["1", "38"], " ", 
       RowBox[{"(", 
        RowBox[{"9", "+", 
         RowBox[{"124", " ", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}]}], "-", 
         RowBox[{"48", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
           "3"]}], "+", 
         RowBox[{"70", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
           "4"]}], "-", 
         RowBox[{"36", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
           "5"]}]}], ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"8", "-", 
          RowBox[{"9", " ", "#1"}], "-", 
          RowBox[{"18", " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], ",", 
      RowBox[{
       FractionBox["1", "38"], " ", 
       RowBox[{"(", 
        RowBox[{"9", "+", 
         RowBox[{"124", " ", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}]}], "-", 
         RowBox[{"48", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], 
           "3"]}], "+", 
         RowBox[{"70", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], 
           "4"]}], "-", 
         RowBox[{"36", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], 
           "5"]}]}], ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"8", "-", 
          RowBox[{"9", " ", "#1"}], "-", 
          RowBox[{"18", " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], ",", 
      RowBox[{
       FractionBox["1", "38"], " ", 
       RowBox[{"(", 
        RowBox[{"9", "+", 
         RowBox[{"124", " ", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}]}], "-", 
         RowBox[{"48", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
           "3"]}], "+", 
         RowBox[{"70", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
           "4"]}], "-", 
         RowBox[{"36", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
           "5"]}]}], ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"8", "-", 
          RowBox[{"9", " ", "#1"}], "-", 
          RowBox[{"18", " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["#1", "3"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["#1", "5"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], ",", 
      RowBox[{
       FractionBox["1", "38"], " ", 
       RowBox[{"(", 
        RowBox[{"9", "+", 
         RowBox[{"124", " ", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}]}], "-", 
         RowBox[{"48", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
           "3"]}], "+", 
         RowBox[{"70", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
           "4"]}], "-", 
         RowBox[{"36", " ", 
          SuperscriptBox[
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"8", "-", 
               RowBox[{"9", " ", "#1"}], "-", 
               RowBox[{"18", " ", 
                SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["#1", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
           "5"]}]}], ")"}]}]}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.89070557176457*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["rts"], "Input",
 CellChangeTimes->{{3.8907055871596613`*^9, 3.890705589319456*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8907055903907423`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rts", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "2"}], " ", "y"}], " ", "+", " ", 
         RowBox[{"x", " ", 
          RowBox[{"y", "^", "2"}]}]}], " ", "==", " ", "2"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "3"}], " ", "y"}], " ", "+", " ", 
         RowBox[{"x", " ", 
          RowBox[{"y", "^", "3"}]}]}], " ", "==", " ", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", " ", "Reals"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "\:0441\:043f\:0435\:0446", " ", "\:0434\:043e\:043c\:0435\:043d"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8907056043063936`*^9, 3.8907056480092154`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], ",", 
     RowBox[{
      FractionBox["9", "38"], "+", 
      RowBox[{
       FractionBox["62", "19"], " ", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"8", "-", 
           RowBox[{"9", " ", "#1"}], "-", 
           RowBox[{"18", " ", 
            SuperscriptBox["#1", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["#1", "3"]}], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["#1", "5"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}]}], "-", 
      RowBox[{
       FractionBox["24", "19"], " ", 
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"8", "-", 
            RowBox[{"9", " ", "#1"}], "-", 
            RowBox[{"18", " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"6", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], "3"]}], 
      "+", 
      RowBox[{
       FractionBox["35", "19"], " ", 
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"8", "-", 
            RowBox[{"9", " ", "#1"}], "-", 
            RowBox[{"18", " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"6", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], "4"]}], 
      "-", 
      RowBox[{
       FractionBox["18", "19"], " ", 
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"8", "-", 
            RowBox[{"9", " ", "#1"}], "-", 
            RowBox[{"18", " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"6", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
        "5"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      FractionBox["9", "38"], "+", 
      RowBox[{
       FractionBox["62", "19"], " ", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"8", "-", 
           RowBox[{"9", " ", "#1"}], "-", 
           RowBox[{"18", " ", 
            SuperscriptBox["#1", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["#1", "3"]}], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["#1", "5"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}]}], "-", 
      RowBox[{
       FractionBox["24", "19"], " ", 
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"8", "-", 
            RowBox[{"9", " ", "#1"}], "-", 
            RowBox[{"18", " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"6", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], "3"]}], 
      "+", 
      RowBox[{
       FractionBox["35", "19"], " ", 
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"8", "-", 
            RowBox[{"9", " ", "#1"}], "-", 
            RowBox[{"18", " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"6", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], "4"]}], 
      "-", 
      RowBox[{
       FractionBox["18", "19"], " ", 
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"8", "-", 
            RowBox[{"9", " ", "#1"}], "-", 
            RowBox[{"18", " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["#1", "3"]}], "-", 
            RowBox[{"6", " ", 
             SuperscriptBox["#1", "5"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
        "5"]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8907056231004076`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rts", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "^", "2"}], " ", "y"}], " ", "+", " ", 
          RowBox[{"x", " ", 
           RowBox[{"y", "^", "2"}]}]}], " ", "==", " ", "2"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "^", "3"}], " ", "y"}], " ", "+", " ", 
          RowBox[{"x", " ", 
           RowBox[{"y", "^", "3"}]}]}], " ", "==", " ", "3"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], " ", "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.890705715846281*^9, 3.890705721257233*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.4943361211083196`", ",", "1.779386215679062`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7793862156790619`", ",", "0.4943361211083193`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.9915804338841582`"}], "-", 
      RowBox[{"0.11546444863950303`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.6047192654904682`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.3841520366665425`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.9915804338841582`"}], "+", 
      RowBox[{"0.11546444863950303`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.6047192654904682`", "\[VeryThinSpace]", "-", 
      RowBox[{"1.3841520366665425`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.6047192654904674`", "\[VeryThinSpace]", "-", 
      RowBox[{"1.3841520366665425`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.9915804338841592`"}], "+", 
      RowBox[{"0.11546444863950374`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.6047192654904674`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.3841520366665425`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.9915804338841592`"}], "-", 
      RowBox[{"0.11546444863950374`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.890705721720753*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Element", "[", 
  RowBox[{
   RowBox[{"x", "/.", 
    RowBox[{"rts", "[", 
     RowBox[{"[", 
      RowBox[{"6", ",", "1"}], "]"}], "]"}]}], ",", " ", "Reals"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8907057424649944`*^9, 3.890705792201438*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(\\(0.6047192654904674` \
\[VeryThinSpace]\\)\\) + \\(\\(1.3841520366665425`\\\\ \
\[ImaginaryI]\\)\\)}\\)\\n\[NoBreak] is neither a list of replacement rules \
nor a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907057944451756`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"x", "/.", "\[VeryThinSpace]", 
    RowBox[{"0.6047192654904674`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.3841520366665425`", " ", "\[ImaginaryI]"}]}]}], ")"}], 
  "\[Element]", "Reals"}]], "Output",
 CellChangeTimes->{3.8907057944451756`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"rts", ",", " ", 
   RowBox[{
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"x", " ", "/.", " ", "#"}], ",", " ", "Reals"}], "]"}], " ", 
    "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8907058465652623`*^9, 3.890705891937323*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({0.4943361211083196`, \
1.779386215679062`}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907058986687956`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({1.7793862156790619`, 0.4943361211083193`}\
\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907058986687956`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(\\(\\(\\(-0.9915804338841582`\\)\\) - \
\\(\\(0.11546444863950303`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.6047192654904682` \[VeryThinSpace]\\)\\) + \
\\(\\(1.3841520366665425`\\\\ \[ImaginaryI]\\)\\)\\)\\)}\\)\\n\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907058986687956`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907058986687956`*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.8907058986687956`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rts", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "2"}], " ", "y"}], " ", "+", " ", 
         RowBox[{"x", " ", 
          RowBox[{"y", "^", "2"}]}]}], " ", "==", " ", "2"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "3"}], " ", "y"}], " ", "+", " ", 
         RowBox[{"x", " ", 
          RowBox[{"y", "^", "3"}]}]}], " ", "==", " ", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}], " "}]}]], "Input",
 CellChangeTimes->{{3.8907059709511623`*^9, 3.890705972004027*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "4"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "5"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "6"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.890705972550862*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"rts", ",", " ", 
   RowBox[{
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"x", " ", "/.", " ", "#"}], ",", " ", "Reals"}], "]"}], " ", 
    "&"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(\\(Root[\\(\\(\\(\\(\\(\\(8 - \
\\(\\(9\\\\ #1\\)\\) - \\(\\(18\\\\ #1\\^2\\)\\) + \\(\\(8\\\\ #1\\^3\\)\\) - \
\\(\\(6\\\\ #1\\^5\\)\\) + \\(\\(4\\\\ #1\\^6\\)\\)\\)\\) &\\)\\), 1, \
0\\)\\)]\\)\\), \\(\\(1\\/38\\\\ \\(\\((\\(\[LeftSkeleton] 1 \[RightSkeleton]\
\\))\\)\\)\\)\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907059834364843`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(\\(Root[\\(\\(\\(\\(\\(\\(8 - \
\\(\\(9\\\\ #1\\)\\) - \\(\\(18\\\\ #1\\^2\\)\\) + \\(\\(8\\\\ #1\\^3\\)\\) - \
\\(\\(6\\\\ #1\\^5\\)\\) + \\(\\(4\\\\ #1\\^6\\)\\)\\)\\) &\\)\\), 2, \
0\\)\\)]\\)\\), \\(\\(1\\/38\\\\ \\(\\((\\(\[LeftSkeleton] 1 \[RightSkeleton]\
\\))\\)\\)\\)\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907059834364843`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(\\(Root[\\(\\(\\(\\(\\(\\(8 - \
\\(\\(9\\\\ #1\\)\\) - \\(\\(18\\\\ #1\\^2\\)\\) + \\(\\(8\\\\ #1\\^3\\)\\) - \
\\(\\(6\\\\ #1\\^5\\)\\) + \\(\\(4\\\\ #1\\^6\\)\\)\\)\\) &\\)\\), 3, \
0\\)\\)]\\)\\), \\(\\(1\\/38\\\\ \\(\\((\\(\[LeftSkeleton] 1 \[RightSkeleton]\
\\))\\)\\)\\)\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907059834364843`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907059834364843`*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.8907059834364843`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"rts", ",", " ", 
   RowBox[{
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", "Reals"}], "]"}], " ", 
    "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.890706017123888*^9, 3.890706021264577*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"9", " ", "#1"}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "5"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "38"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"124", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"8", "-", 
             RowBox[{"9", " ", "#1"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["#1", "3"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["#1", "5"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}]}], "-", 
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
          "3"]}], "+", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
          "4"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox[
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"8", "-", 
              RowBox[{"9", " ", "#1"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["#1", "3"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["#1", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
          "5"]}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.890706023668111*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.890706034419756*^9, 3.8907060672560883`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"FindRoots", "[", 
      RowBox[{"f_", ",", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "a_", ",", "b_"}], "}"}], ",", "opts___"}], "]"}], 
     " ", "-", " ", 
     RowBox[{
     "\:0442\:0440\:0438", " ", 
      "\:043f\:043e\:0434\:0447\:0435\:0440\:043a\:0438\:0432\:0430\:043d\
\:0438\:044f"}], " ", "-", " ", 
     RowBox[{
     "\:0430\:0440\:0433\:0443\:043c\:0435\:043d\:0442\:0430", " ", "\:0432", 
      " ", "\:0444\:0443\:043d\:043a\:0446\:0438\:0438", " ", 
      "\:043c\:043e\:0436\:0435\:0442", " ", "\:0438", " ", "\:043d\:0435", 
      " ", "\:0431\:044b\:0442\:044c"}]}], ",", " ", 
    RowBox[{
    "\:0444\:0443\:043d\:043a\:0446\:0438\:044f", " ", 
     "\:0434\:0435\:043b\:0430\:0435\:0442\:0441\:044f", " ", "\:0441", " ", 
     "\:043e\:0442\:043b\:043e\:0436\:0435\:043d\:043d\:044b\:043c", " ", 
     RowBox[{
      RowBox[{
      "\:043f\:0440\:0438\:0441\:0432\:0430\:0438\:0432\:0430\:043d\:0438\
\:0435\:043c", "!!"}], "!"}]}]}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8907087666895857`*^9, 3.8907087897255325`*^9}, {
  3.890708898632174*^9, 3.890708910800421*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindRoots", "[", 
   RowBox[{"f_", ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "a_", ",", "b_"}], "}"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p", ",", "seeds"}], "}"}], ",", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"a", "-", 
           FractionBox[
            RowBox[{"b", "-", "a"}], "100"]}], ",", 
          RowBox[{"b", "+", 
           FractionBox[
            RowBox[{"b", "-", "a"}], "100"]}]}], "}"}], ",", 
        RowBox[{"Mesh", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"{", "0", "}"}], "}"}]}], ",", 
        RowBox[{"MeshFunctions", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", "/.", 
            RowBox[{"x", "->", "#1"}]}], "&"}], ")"}]}], ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Sequence", "@@", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "opts", "}"}], ",", 
            RowBox[{"Options", "[", "Graphics", "]"}]}], "]"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"seeds", "=", 
      RowBox[{"Union", "[", 
       RowBox[{
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"Normal", "[", "p", "]"}], ",", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{"z_", ",", "_"}], "}"}], "]"}], "\[RuleDelayed]", "z"}], 
          ",", "Infinity"}], "]"}], ",", 
        RowBox[{"SameTest", " ", "->", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"#1", "-", "#2"}], "]"}], "<", 
            SuperscriptBox["10", 
             RowBox[{"-", "6"}]]}], "&"}], ")"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"seeds", "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"Union", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "x", "]"}], "/.", 
              RowBox[{"FindRoot", "[", 
               RowBox[{
                RowBox[{"f", "\[Equal]", "0"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "s"}], "}"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", 
                  RowBox[{"FilterRules", "[", 
                   RowBox[{
                    RowBox[{"{", "opts", "}"}], ",", 
                    RowBox[{"Options", "[", "FindRoot", "]"}]}], "]"}]}], 
                 "]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"s", ",", "seeds"}], "}"}]}], "]"}], ",", 
           RowBox[{"(", 
            RowBox[{"SameTest", " ", "->", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"#1", "-", "#2"}], "]"}], "<", 
                SuperscriptBox["10", 
                 RowBox[{"-", "6"}]]}], "&"}], ")"}]}], ")"}]}], "]"}]}], 
        "]"}], ",", 
       RowBox[{
        RowBox[{"a", "\[LessEqual]", "#", "\[LessEqual]", "b"}], "&"}]}], 
      "]"}]}]}], "]"}], " "}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Cos", "[", 
     RowBox[{"x", "^", "3"}], "]"}]}], "+", 
   RowBox[{"Sin", "[", 
    SuperscriptBox["x", "2"], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.890709011850005*^9, 3.890709026790085*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roots", " ", "=", " ", 
  RowBox[{"FindRoots", "[", 
   RowBox[{
    RowBox[{"g", "[", "x", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "pi"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8907090504236865`*^9, 3.8907090844618692`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(-\\(\\(pi\\/100\\)\\)\\)\
\[NoBreak] in \[NoBreak]\\!\\({x, \\(\\(0 - \\(pi - 0\\)\\/100\\)\\), \
\\(\\(pi + \\(pi - 0\\)\\/100\\)\\)}\\)\[NoBreak] is not a machine-sized real \
number. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/plln\\\", ButtonNote -> \
\\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907090922587776`*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.890709092274371*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roots", " ", "=", " ", 
  RowBox[{"FindRoots", "[", 
   RowBox[{
    RowBox[{"g", "[", "x", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "Pi"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.89070912034655*^9, 3.8907091247558155`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9074679807506126`", ",", "1.7042148461505222`", ",", 
   "2.0845095166681427`", ",", "2.1264510011304036`", ",", 
   "2.4373576204500904`", ",", "2.6118447348224283`", ",", 
   "2.6900859591962036`", ",", "2.9060383167328125`", ",", 
   "2.9651957655444656`", ",", "3.0962536013924917`"}], "}"}]], "Output",
 CellChangeTimes->{3.890709125758328*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"GrayLevel", "[", "0.6", "]"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", "0"}], "}"}], "&"}], "/@", "roots"}], "]"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8907091909146075`*^9, 3.8907092081466317`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
EwO2
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  AxesStyle->GrayLevel[0.6],
  Epilog->{
    PointSize[0.02], 
    PointBox[{{0.9074679807506126, 0}, {1.7042148461505222`, 0}, {
      2.0845095166681427`, 0}, {2.1264510011304036`, 0}, {
      2.4373576204500904`, 0}, {2.6118447348224283`, 0}, {
      2.6900859591962036`, 0}, {2.9060383167328125`, 0}, {
      2.9651957655444656`, 0}, {3.0962536013924917`, 0}}]},
  Frame->True,
  PlotRange->
   NCache[{{0, Pi}, {-1.7853425574508226`, 1.9999556242437255`}}, {{
     0, 3.141592653589793}, {-1.7853425574508226`, 1.9999556242437255`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.89070919716099*^9, 3.890709211278129*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8907094177417135`*^9, 3.8907094193266497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"num", " ", "=", " ", "55"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8907096741685133`*^9, 3.890709692817404*^9}, {
  3.890710477745846*^9, 3.8907104779088182`*^9}}],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.890709696955099*^9, 3.8907104792116127`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nsol", "=", 
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "x", "  ", 
        RowBox[{"y", "^", "4"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"x", "^", "2"}], " ", 
        RowBox[{"y", "^", "3"}]}], " ", "-", " ", 
       RowBox[{"2", " ", 
        RowBox[{"x", "^", "3"}], " ", 
        RowBox[{"y", "^", "2"}]}], " ", "-", " ", 
       RowBox[{"y", "^", "5"}], " ", "-", " ", 
       RowBox[{
        RowBox[{"x", "^", "4"}], " ", "y"}], " ", "+", " ", 
       RowBox[{"2", "y"}]}], " ", "\[Equal]", " ", "num"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8907098437935724`*^9, 3.8907099040102777`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "infsolns"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite solution set has dimension at least \[NoBreak]\\!\
\\(1\\)\[NoBreak]. Returning intersection of solutions with \
\[NoBreak]\\!\\(\\(151145\\\\ x\\)\\/110742 - \\(17791\\\\ y\\)\\/18457\\)\
\[NoBreak] == 1. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/NSolve\\\", \
ButtonNote -> \\\"NSolve::infsolns\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907099101335974`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "11.564820828837833`"}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "17.412426172172207`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "4.716435474473381`"}], "+", 
       RowBox[{"8.535742093888906`", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "7.715583158050692`"}], "+", 
       RowBox[{"12.086024195574906`", " ", "\[ImaginaryI]"}]}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "4.716435474473381`"}], "-", 
       RowBox[{"8.535742093888906`", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "7.715583158050692`"}], "-", 
       RowBox[{"12.086024195574906`", " ", "\[ImaginaryI]"}]}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"6.2420396998229`", "\[VeryThinSpace]", "+", 
       RowBox[{"5.323824301720156`", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"7.800864579747553`", "\[VeryThinSpace]", "+", 
       RowBox[{"7.538169337338101`", " ", "\[ImaginaryI]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"6.2420396998229`", "\[VeryThinSpace]", "-", 
       RowBox[{"5.323824301720156`", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"7.800864579747553`", "\[VeryThinSpace]", "-", 
       RowBox[{"7.538169337338101`", " ", "\[ImaginaryI]"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8907099101335974`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}], "/.", "nsol3"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({nsol3}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8907099474450407`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}], "/.", "\[VeryThinSpace]", 
  "nsol3"}]], "Output",
 CellChangeTimes->{3.8907099474450407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "x", "  ", 
        RowBox[{"y", "^", "4"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"x", "^", "2"}], " ", 
        RowBox[{"y", "^", "3"}]}], " ", "-", " ", 
       RowBox[{"2", " ", 
        RowBox[{"x", "^", "3"}], " ", 
        RowBox[{"y", "^", "2"}]}], " ", "-", " ", 
       RowBox[{"y", "^", "5"}], " ", "-", " ", 
       RowBox[{
        RowBox[{"x", "^", "4"}], " ", "y"}], " ", "+", " ", 
       RowBox[{"2", "y"}]}], " ", "\[Equal]", " ", "num"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"ContourStyle", " ", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}]}], "}"}]}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.890709976772376*^9, 3.8907100741423197`*^9}, {
  3.8907103229072447`*^9, 3.8907103521389956`*^9}, {3.8907104045370073`*^9, 
  3.890710419898598*^9}, {3.8907106244596963`*^9, 3.890710633794565*^9}, {
  3.890710733476836*^9, 3.8907107382782307`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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

   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[1, 0, 0], Thickness[Large], LineBox[CompressedData["
1:eJwl1FV4EAQUBeCNMRgwYhtItyIp3Y00ijq6EenY6O6WblEQBJXuVkIBFaS7
u7uUzn8fD/+5b+ft3IzNoiOjAgMCApKJmBuLIGITTBziEkI84pOAUBKSiMQk
IYxwIkga08kHJCcFKUlFatKQlnSkJwMZyURmPuQjsvAxWclGdnKQk1x8Qm7y
kJd85KcABSlEYYpQlGIUpwQlKUVpylCWcnxKeSpQkUpUpgpVqcZnfE51vuBL
viKSGtSkFrWpQ13qUZ8GNKQRjWlCU76mGd/QnBa0pBWtaUNb2tGeDkQRTUc6
0ZkudKUb3elBT3rRmz70pR/9GcBABjGYIQxlGMMZwUi+ZRSjGcNYxjGeCUxk
EpOZwlSm8R3T+Z4fmMFMfmQWs/mJOczlZ37hV+YxnwUsZBGLWcJSlrGcFaxk
FatZw1rWsZ4N/MbvbGQTm9nCH/zJVraxnb/4m3/YwU7+ZRe72cNe9rGfAxzk
EIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQR
//E/j3nCU57xnBe85BWvecNbYsYfSCyCiE0wcYhLCPGITwJCSUgiEpOEMMKJ
IGng+5/yDntcgkc=
        "]], LineBox[CompressedData["
1:eJwl0PefDwQAgOHvGWUmyV535rnjuDPOdmdv7nDDOJw7mzvbHWUVyt5ltO1K
UZpGwyi7KFuDBmU1qFQeHz887x/whqRmxI8MCgQCg6QYxSlBSUpRmjKUpRzl
CSaEClSkEpWpQlVCqUYY4VSnBhHUpBaRRFGbOtSlHtHUpwENaURjmtCUZsQQ
S3Na0JJWtKYNbWlHezrQkU50pgtdiSOebnSnBwkkkkQyPelFb/qQQl/60Z9U
BpBGOgOD7n8czBCGMozhjODe6AwyGcVoxjCWcYxnAhPJIptJTOYxHmcKU5nG
dGbwBE8yk1nM5imeZg5zmcd8FrCQRSxmCUtZxnJW8AzPspJVrGYNz/E8L/Ai
L/Eyr7CWdaxnAxvZxGZe5TVeZwtv8CZb2cZbvM123uFd3uN9PuBDdrCTXezm
Iz7mEz5lD3vZx34+43MOcJBDHOYIRznGF3zJcU7wFV9zklOc5gxnOcd5LvAN
3/Id33ORS/zAj/zEz1zmCr/wK1e5xnVucJPf+J0/+JNb3OYv/uYf7vAv//E/
gRyBQBA5yEkucvMAD5KHvOQjPwUoyEMU4mEK8whFeJSiFKM4JShJKUpThrKU
ozzBhFCBilSiMlWoSijVCCOc6tQggprUIpIoalOHutQjmvo0oCGNaEwTmtKM
GGJpTgta0orWtKEt7WhPBzrSic50oStxxNON7vQggUSSSKYnvehNH1LoSz/6
k8oA0khnIIMYzBCGMozhjGAkGWQyitGMYSzjGM8EJpJFNpOYzF3QlqDf
        "]], LineBox[CompressedData["
1:eJwNw+N2kAEAANBvW9aytWzbNpddi7/qCbLdlm3btm3bWra795wbEdUvsm9I
EASx9g8NggEOdJCDHeJQhzncEY50lKMd41jHOd4JTnSS0cY42SlOdZrTneFM
ZznbOc51nvNd4EIXudglLnWZy13hSle52jWudZ3r3eBGN7nZLW51m9vd4U53
uds97nWf+z3gQQ952CMe9ZjHPeFJT3naM571nOe94EUvedkrXvWa173hTW95
2zve9Z73feBDH/nYJz71mc994Utf+dpY3/jWd773gx/95Ge/+NVvfveHP/3l
b//4138GYUEQYqhhxjGu8YxvAhOayMQmManJDDe5KUxpKlObxrSmM70ZzGgm
M5vFrGYzuxHmMKe5zG0e85rP/BawoIUsbBGLWszilrCkpSxtGctazvJWsKKV
rGwVq1rN6tawprWsbR3rWs/6NrChjWxsE5vazOZG2sKWtrK1bWxrO9vbwY52
srNd7Go3o+xuD3vay9728T+w03tv
        "]]},
      RowBox[{
        RowBox[{
          RowBox[{"2", " ", "y"}], "-", 
          RowBox[{
            SuperscriptBox["x", "4"], " ", "y"}], "-", 
          RowBox[{"2", " ", 
            SuperscriptBox["x", "3"], " ", 
            SuperscriptBox["y", "2"]}], "+", 
          RowBox[{
            SuperscriptBox["x", "2"], " ", 
            SuperscriptBox["y", "3"]}], "+", 
          RowBox[{"2", " ", "x", " ", 
            SuperscriptBox["y", "4"]}], "-", 
          SuperscriptBox["y", "5"]}], "\[Equal]", "55"}]],
     Annotation[#, 
      2 $CellContext`y - $CellContext`x^4 $CellContext`y - 
       2 $CellContext`x^3 $CellContext`y^2 + $CellContext`x^2 \
$CellContext`y^3 + 2 $CellContext`x $CellContext`y^4 - $CellContext`y^5 == 55,
       "Tooltip"]& ]}],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{-10, 10}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.890709996623681*^9, 3.890710024908098*^9}, 
   3.8907100763469276`*^9, {3.8907103358835726`*^9, 3.890710352972874*^9}, 
   3.8907105917528086`*^9, 3.8907107444761915`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "x", "  ", 
        RowBox[{"y", "^", "4"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"x", "^", "2"}], " ", 
        RowBox[{"y", "^", "3"}]}], " ", "-", " ", 
       RowBox[{"2", " ", 
        RowBox[{"x", "^", "3"}], " ", 
        RowBox[{"y", "^", "2"}]}], " ", "-", " ", 
       RowBox[{"y", "^", "5"}], " ", "-", " ", 
       RowBox[{
        RowBox[{"x", "^", "4"}], " ", "y"}], " ", "+", " ", 
       RowBox[{"2", "y"}]}], " ", "\[Equal]", " ", "num"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", " ", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "10"}], "}"}]}], "]"}], " ", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8907101056584587`*^9, 3.890710241900756*^9}, {
  3.8907105992860813`*^9, 3.890710602107565*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
ry9+/NiX4VyPAC2oofdyeIYnxgdAb5e1X8y4jp1iONcjQDuSqL3TXDIM2wdo
3wKvsXA+1qXiz9Bu7KudHn/JKA3LBXxWwE/9k6ax6P/gJxwvzGc2+3pjOwD+
FltaLXBwZjIV7yLt3qfOXUeFnsVQ93gQv6phFfFa75KGcSqIV5+57WHh8Ts9
5APt0m6etWnBa67hvl/w67uhitNefKTOjQLnCimY3Gdxnw7lB39/yX1fMXdN
JvoP2PmbsMrjvEnqfgnof9LtF13ivaCLHNJnBlecHbqsQXcUCMloz3svZflg
8ImoAitt51ikYH69Bo7DGdsfyBfag7HT+S/eippj/wt6aMhq/yo2skEOds+s
qD7D3ehNxSFJe/6+RMypzDsUy4v10XL04YzhPKwX8P5unl6fdN4T1DyFtKt9
hlOxE6kGWK6Vg58vt+Wx0XSEnCf6sw5huwHvZSwX+KPsGS4hw3dUPwXtM++X
ttXaRr6YD2O7DfYFP5HdIDxtrl8Ncmh/Kqx1OZdcqaBDOwLl/Vr3ziY+phT1
l+FPXLU0gTpP3TtyQGvj2/+es+Y7FlpoJfvfc8GXFC/fv/xO+D/nWI1iy0fc
8oT/c+5y7kwhy9EO4f+cqwL/2flNvPdgADVPSQ6yn9s78OW/+y4eyPGFCPz3
3NCU4oF6uQERWvnHC43BzdT3r7yRETHdWoQWPKk23ePBfOTBdfNyVi/4ba8H
gmMbehYin9NzZsf+JmGaAq0xq57Gj3x68tC8+I/CNHgCd9llaFKUJkyblfPA
IvYK1Y/wyAnK/MwXpn2p+cz65hfl54WzaaE1xcK0qQ7JwkWqlH3td72KSmwV
psnP2un/WYHKv79kIvyXXYOU1bGMgbE9VHn3r/KMqrdpknowqGRsKvPffU0K
N4/defiVyie3dSDSsFD4P341UODmszBXmOaoPPKjt4my16FtdytEbgnT3h67
L8u8myqXnaX02Os04f/0m3/zq7/Z5W/+9jd7/c0P/2bHv/nn3+z7N7/9/0uf
/7d+8jd7/b/1n7/Vu7/Vo7/5+d/q49/q79/882/+/De/DdIOUGVmeovx9q0O
nLJ6bYp0AxLHAB7Aecvv+oEDdOdDjQ5MTL+Q23D4qka/VaMfdv8mwsRErVM0
pV3YxvI/6wvAdzPPSWL7zQs+TLIzuVP3oaWqLovh/M1/wfyd5J9N7umSmc/y
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
nGehPsI7ZZc05+A4CjhHx6qTPsX36XDeD9f7yO+/w/lA4EL92W9fz6F+Hxa4
aYKv4unV1O+LAX8m9fJDVKoJ2gt4QZG923ULe7QX8HNxH9c6c1ihvXBf2LSS
hJhWb7QX8E2762172tzQXsD5vklLifOGob3wXn+TyoTlmQFoL+Dlr5JMHp+9
ivYC7uodpuCyOxrtBfyqcV1D1Itk/N0o3Cd4fueAgWUi2hG4z4D3SYl3mWhH
4CdDheJbNxegHYHrHOMQ5aujox1xfmeUevx8xVOMM0D7v/SOw43Eowew/cd9
97vlzs99R9UvnE9Nu5jmnmWJdgFem/kt8aGlO+oPPDXiV4zo0hDUGfjtaaL2
D+5eQT2By8ec2sGTnoK6ATfsEkhea56F+uC9JkU/fgob3kd9gB+SkBhqjnuC
+uA9UhF5H1J3vER9gFefkXg206IO2w1s54/sPW3jpoPjBFwvFpsd9N3Ahg77
Vql1YVO2D4etcPwAXNmZO9CywYgO50mAb7xUsznzuAHOW4FHzNzUu+KdC30h
GXfBvO/z7t2Bty196fPJvljgKUWeqUPRnlgfcX0z1cB7+oAT/j4R7uMW0Dgk
M88FywvjyoTqnXrHBNWxfuE9c4OmuhHvjtOPknkN8EK23HxxrQhMj/PKk3rx
veZKWO9g3jHbj11zlfRp9B/ov9bwbmeT3nSc/p6MD/G8flzocLc21X4Cr4l4
XG6/PwD9Dfq17pMFrDcF5DE98IaAlj2/Kyq9gNRT6NeS1gSsS1ENpxcz8HeE
Qz7QT321EA5QNz1HnyD3nQFP0Oyo0KtPohuQcQjGh6cxr2XmzMT2AeJ+18jv
+t0g4wHGuGsDGQ8wcmg38L6ZecdXrtnhQA8g41vGuCLsX4H0dt95zGafiMd2
ANoHlYvW4nNlqHYb6sW96K/3LlxRwzgk8E0LeM/W/1REO4Ldu0l8AOwC9uIs
ZJc5v9waf68T+hHJX0lXXVyp35GH76EV1WX6pamjf+I+eq9LP73ZDZDD95iy
zlat22CMfvj/tHbuYT1l7RtPzq/CKL0yNClkkpHklPQilK8ax9JEkbMOyqGY
hGIkDaVRDhEJpZRS1JCySlIilJAkJDIhcioj8/pdPfezr3d39d/vTx/f1lp7
7bXX+blv8IIni4p6untxO+T5cK1toI3tNv49vrug7KVDWz1Zx+8dvNDUzWn4
qCP8e3xHzorWSv3UVnP6fK/KJr3Uc6Ifvy+8l7+3Wy4+4r+f2wPey8NMU4+2
MwL5fiDqB/FrmG+Dez5yza7pM5v7DfCgT2fj29cv4P0uXvepZyWpWHrwPBx8
X4he8vZt63m+Da612d7o/XJ/gXg83vfb3ss+3VsherbA0c+AL1SPd9FrvboZ
X0wc92vB94blRX744NeM7yeOe+o8vu/11EyJCm7G7YhDR5LnIetWz/TSCW/G
+xDXp3zRbos2WXdd6OsgfpLxE75NHHERrOvpo6W7VHWKQFwExwPtaP9g45wp
ol0L62jsS6O9NYbenLA8dTLvS6O/7Z3a448PU6xEf2oP4HkJFx76v50scH8a
fPOloq+Fk2eIcbL9vZ20v/eohXVEo+wccCadAxZSfB36Jc+fpvu8WzZDGFI/
Az4uM9zveKy9GA/dReKxFNf2PdU/vou5vm7jr46bLdRk/OcNTRz37fC9JL87
mZsgJog2tB4Ez1gcOSjpmocQtM8GPjKpxsCgPkzUtDBfDaT7uxinnKotjFON
ZgszWk+Bq7jYmLWatFhUycapbBqn0A9wv3fvwiXtl5J/K+rhhuLAIndHL/Yb
BVfv7RgcPmku73vwcxWo3dbvbSue0ncKHpNmd8jc1JfP4/Bc2X8e7Pp/8S+I
j0W/UpsZ5K3sMJX3l9DeFs0zvDYoZhrv/6P9bIg3StL/Vn58j+j3xhT9Utjb
PJSfF79v4zE6/OHgQJEqmw9E0XwA/QDHU7pWb67+xZ7nh6gH1Q46PZP0LPk7
RXsYu7GpPVyn+gG/vXbw97M7/i5K5HxdE8f4hfpJ77LWZdtUa4H4LvA0ihvC
OIV623vHTFuvcTL3/2gPdRPXu9v2mcvjJr73A1/76Vk/VgiFbH9sIO2PeVG/
gfQ/PQi88GC2tD4Cf1OhH9q9wI7fF89Xz+te9mo3l+efyLfD89yJIZUKHt/B
s0aOGOZTrxCId+J1dExj6OB51jz/5ziep+FLXZWmsu+kvL9C/XD/2WmhbnGe
5K+Ncja2rzYauuJn9tdmXyDTgTpbLiq43+P1wqRYj+A/bLmc4O5j9w39MMaK
82V99/hgtTJnJ/4968oY3Vqse1/aN2C9k6unP1iYSvMccJOuVpeL9kvzE7Tz
1bbPg68ZevE5IPtcPQzVOXnVU3Sl8Zf3Zct79U02deF9Tsw/9+ZaTHA86sj1
Ix83X7XQL+Eck+O39tdNHPSbQqhTvmiHzgur16YZSvsb3D67dNEx6TdFIG6Q
x6lWL90vv1QIxKPyfsK+tt4R39ot2iHqZ0n07po8LSve72WdpB33jJ+dWsj1
DH5GNeWD0T0H/t5RnrCG2Q98PBQC+toYXx7PSK7TWvNtHJfxSOLoZ1CfGzc+
6Lo804U568TQ76GzhnwjPP+qyey/m9ez4F8PhYcGV3iJSvhHU7+hqxInfp15
XNhR/ww+pU2AYbWBs5gv43taN3H0M6hPzWOdO6pVWnH94D2a+lr+ML3LdPZf
Rj0fDcjvuiNe8otn/xDyZ78m4znE/yMb33fR+I54P3D4sP9N80PU58xX/2zq
sWuecKT1HXid/arMvfWSHzTrC7adUG4pZvI8GfX/hPYPwVlPzrbTbxeeRvA8
Df28YvrDjgEDF/I4iN8nUH0iDhb1NuJjubWLygz2y5avd87Td4j3u4Tij1Ae
1jkuua02Z/heEUT7k3guXaPUGM3Gwzxeg/v+pm1ZZBLFnNsbrRNbURwUeBHN
l6CXzfqX5BtuKOPqH//XTxz1U9K1V4XmgDgRTfMf8KDtKh7xEyIE4lLk96Ay
WuCoN/m6shWdD8r5eDpnQT1nj1TuOyT8LPuMs87f6EMnTX4/LbrRuRL4x9g9
ajvdooQ37cMzL3FqHLE4QQTI7qFdpntoiIfHd2F8vfNzpY7TeDxCe/i1fmPM
od3TBXQlOD5S9enpMINN4r7sHPy+7J4z64LQvjrGWaTT7fjNk6ZW88UKOgcB
X5rdXfW6vS2vc9GulA4tKFr4Zav4h74vcKPwCQY1fp5iDnQqqF3lUdwW5hWs
t+2n9V2bP325P8fv4+q1lRTLt/F8CVzTdfp24bVLeND6Dvysz7DAEg0fUUzz
dvAldb+YWbkGCvgZ4L3n79qeGnE7VrQ631R+9sHz2nY8PeiYuABdGuKZaU3x
WbF0To3369Rdqy7ka5Fwpv6f1xfkl71Kxg2IR1P/gPYWRX7Zh2S8nrgxnZsj
37rqub/b9s4Qr+gcWd4/vGiBY97LPh4yX2z8PpfyrWkhHW86Bwd/NCteZ7FJ
Cftic3zhqLvtO3oUCMQlgi/Y3PfGp96XxGuK7wXfG3VkjGN4Xov3GXBui/bZ
n+KYnEiPGOmYrOzzW5X9W14vgF9xTsvqlPGWfZDl6R/QSE3tMqv5/YGyNo92
32jQaXZeb3ei29Vjl3WanZvP94vPfvdUp9l9raP+HXaoJOo0638iFD75kdnN
97VUrpt3t0jSada//X+Vv6X0WypnS88FPRrMB6qMtb0iyjbxPgz6Mbtpl1JO
XdnL+zDsK5tvV5zR7ZiAHhn7IN3wGFp9I5HnmZh3dWgX9y9/rUgeTznuM6Ph
hF5NIq8rwZWUnEp3P0gXiLcHV0R0Hq6Ym8u+7eCTartq2lTdFIj/BB88YUQ7
38X3xDQar9mHaotekc2lfWIVrXfA1f/JOWr/JVggrhjcasqABZvvJPC9BdbT
zXm7tvhNuoCeCLhbQN9ZOW5XBOLkwUvW7jhWaVIkEF8KHt/tQLueFfcF4t7B
zTWsYiKUKsVW3HugdjKafEngmwL+g3233H6WUQL+SdL9mQQ/59uZwg7+nsSH
k68HfFbAVyVbBwdphgn4kYDHGTs0DPA4LX6k9R3Pe7eqD03SvCrghwQe+frq
fVfHS2IVtQ9wH/LLgK8J//7ajwfyUo8L+HxI9+SDsw55ZoqRtD7i+Uyty+D4
v2+LR7Q+4nPhN7lnpprdFKk0vwX/uLGzeccOVwR0isFTyZ8C/hngp8e0P7hE
NV+MpfUIvq/oH7uZaA98JKyhV0U8XSNktkl5qfhM+tTgblW77/w9tVhA7xj8
/ZzXq7J7XxVTocNAfAD5PsC3A3x8sob3CeNs8Yz6YfCsF6GV46OKxT7ShUe/
NEo7ZdMLlWpRROs48LRWH5bmZ1QKU5rPgEf++/N3u+IeCugsgxvpBfY83+2O
eEfzdvDhQYdCbOZcEw/oe+PxkfwX4A/B+vReYTPnhpaLGfTdoV8arJkytEfP
V2IDzZfAyxucTE5NfS6g4wweNnC09rHQxwK6w+AuZcVLY+3uCR/aN+P40Xy/
2pSt1wXiadmnkXwQoDMIXnvj8bGod3fEOfoewUeU6gRGB1Xxfib6z8+pjlsm
PpsrEG/PvjqfV6Yf3LiM+wE+T+/hEthr52GhTP0A3+Pt0EY1JzhaQFcLfITj
zdDr8xJ53YT1uLWO11/e2525PwQPKmiz5uv0ZO4PwUcXLj2xV+W8gE4H+u3z
g6z0Vlhc5HunmN++I91p/B48fKnPnUU51wT0rHkdrVXRK/v0GrGL+gu8982k
n4z6Qf/W7kri/eJhvmKg7Lym3Yam85pGel70P4o1Ae92fvmdzytRP+tP6W1N
S58ikmX7e3Nofy+V8kN/kk66anbUz+D9+odZ9ms/fYtQwH8WOv3RTfpdyBf1
ZjzPRr3z8clih2y9sJPWC23pHjLqIWaH+yLnhmwBPX3UQ/2ewtMaX1xFIZUP
+Z6lOPc0er9I56LtyLdL9K6LBOzj0+8bcprislua57Q0b8F7RX1+FC55pjfm
s34CuMd31SHlh50lPTfiD29pVejo7+Y4fdY3surQYU+vAxxfz/dn9hyfXBYd
xbqy/B1568U+VY1lXVnwO7Ms9N96J3E52ZfsZP8jI6zcOF/wExM1SsovJEhx
/dhHHZk48D+rz3C+4HXRrqfOuEo+5ni/JXTvGumAP8/5w8Zis+D6QbkUn3b4
tR0p6Yrg/xNTn30OX3dQ8h0j3kvmywZe9uvcqCefJV82tOfFMh9qcGeZDzX7
bpEPNdIFH0v6lignuBr5U/M+FHG5DzXv28h8qMFfy3yowVNkPtTg+jIfavA+
5EO9RraO0JTpIeD3v5A+A+qH9SzbB6xTuhgj6ZwQv5nycPU1m4O8rwXuvahu
2/rWgZJ+IPHMgWqVlgaS7iXPuwb3GdnDXaoH/v3NiduKQiTdCfD9Yfss9eol
vzbwhKrc+mVlkr8S+OshrZ2GB1fz8/I+0t0u+g3zJf8glOvgg72lDYbx/Fzg
A+wXtr7qLemxsK6n90zlyfb+kt868eQf/zx3fJFUfnAH5R5aySGlkt868b/T
h0Y8SZP8s8Cvp69U/36Q9L7AvTxurZoU/5bLifyj/jF7P+u7RM4XvGb3mLBr
A6V82Qft0pJ7rb9K+YJPOfiprLW25MsMrrzBrH/5PqnfQz6+yZ/eVz5K5PR5
H2zElp0+UVL64HeVw2wKbGqY4+8KtSru1mT/xfXJ+/8yHwfw3Yc9vxxrVcjv
ke/VKJubRkTZsS4K+AbSE0A74PszSueUzUdJfoLgbkqLlOL8s7g8rPub6W6Q
oyr5o4E/yNs+TeFfxPUAftapZt7blaXcL+F7NOj41Czg5h/83YFPqFqjvXK+
Pz8Xj3fDnxUEqUo6peD3KL6e47dxriGGhbZ/IflmgpeWpn+JWi35A7Le2Ljc
k8d8JV9v1gMe0TFpjXkJPxfrG923tV7sUy75vhF3DR9+9llxJT8vymVC6y9w
lCtqyMwsC9VMrgdwI1pn4e/BYx1WdB4yJEXy38Q49r5/cEZZHqfD+73/Hh80
IT2b65P9jmg9xfeQ8B2b2wyJihecPvsl/jTJYVJIsaRvTLzHl6+dNQKldgju
P8e4k4lmLn+n4Am0bkJ+4IlvLjqdsi7gfFHf1z0P+Bz5Nv9HvuDKmunXw8/d
5XzB3TeN/tzz5S3JX5J4p6yse5Hf6me2bN3UjdZN3C8Q/1JqsT//aC63Bx7/
253reHlqCZcT7//TvPzCjIgqLif4w5DBuj+ce8zl5PjQnU592p0q43KC942f
57Vm5G0uJ/ja6LB/WeRc5XEZPIDWTYGy+fMQmj9zHDvx9W+Ka21eS7r94N3H
HrNWeX6L2zl4/hm15VcaKyQ9WOoXlUjPB88Lvku1e6eCIy/4ecE3OWQr4nY8
5efluE7VHj/0G10h6YISt3bdp+yifEfSvYfOkKHq+LLDBZIOG/FxMn868HsU
74nnAu+30UI3S5Tx9wuu0X+5m/GY5/xcfG7+RTchQl3SzQaPofufPA8g3vur
anbkWsn/BXx91U/v5mQm8XOhPozSB61odTGAnwv8c8+1T95VS76oqKdOpLeD
37O+mtnWOMOUcC4P6/nUT9Sp1E7h8rCuzvBBFVfMMrh+wO0oXgD1A35Z60zY
qpFlPD6CZ2TkjXqX8JjLw+OwTAcS7chR5qMH/ojiTJE+36+j+B2kw/66sz/0
zzX35+cCf05xnSg/n+/L/NTAq2bE5Oluv8Lvhc/x/SIHxSVKviEc59I4LGnq
yhCuN75PKPMRA39dtOz8IAfJF4z742TX3BMaxfx+2YeTdDPAkc9wuk+C37HP
xqtB9+suJEt+cLJ9XdQjni96mfb+Mn0/fi72YZPpQuM9usn03pF+Ht2DQj0i
H3fv5Nq1upKeM8dDVV7okj52Zov3A/leF+KXKe4AHOl0x/12Kg/7h0erOPQq
OCDpOcvug/G5FNXTxc/BFxMjgyVfA0ovMtHU4JT7fE6f3xvpcqN8yBc62/ge
kF5vi5cWge09OH3W7Ykbetlg+xauNz43P197J+2vufxeWD/Ppmn/AeVB+zLQ
b9KPZV9Lel+7LKc8MekXzung90cbChreuMRxfYKrTG7SGWB/E/p/+I/g38i/
F+nh8LqIynnRsPxWSucErmeUR7F8y3o1i/PcPuXnETz/o/TG03n3bNk54xM6
Z8Tzgttnr1PZM09qJ3y+T+eJ7HuC+8y1C/x9fU9J/hTEX6f9r04jn+eSTiPS
ZT0Bma4geA6di+HfqOe3P9dFOUXXif8Cb0N3RQ==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
HvlBdO9gD2MXY4vyf3cprX+3Un170bd0XKrPpqX19UXYB4V9fGybS5Ef1aDv
xT+qsp36mSG6b25/6GXsgcK+wO30rfKN+AXcF/uV/yK6qfqZjbwTv0PVcZM7
CsufserzN9E6qt9dbY4rPad+RIcWno/7xY4D/KTjx8T/LNoxse+MzfpXYhuw
t+gDqX3M09BZiW3AM5C3ie2iM0XXJtbFZ6F3Uuv8bon/D99278zfiG8ViyIM
TkBW4eup7uXI42a1yhcqg/kHqe2I09XmkdR2QXfxp8ceP/i0vUR7qvQXX6jf
rSPbwx+oNFD9M6JT8dFDmypyLLKtm6jPjurz4sRjARvmHPGXlbblx4ueHd4L
nRKrnCS+f+JxhD1zbuL/gD1znvhn8K3UfxvRGrr+UvEdda/7sJEjH48rrFPu
E12m8hDyRPRZXXOr+KmZx8YgtTlFNFL/J6r/i7DNCvvczPGDCs/jYaIHF47z
XM9/jq2vsBPWFKani05PbPu1R9fEHlfowa6ZdVVj0bsy67N+oteI7hTbnrlb
195SsV9ZO/iV/K/H1e9y0btEn49tz6D/1gSd+TBzPnMcb5ropiojxHfOPPbw
TU9DF6n/J9BLjKXIdhQ6YCjvprb7aiyflDiGgx9VE39VfC3Ry9Xmtsjyf46e
YXbs47mZj18QjWLrhTEqg2LHWYi1oRduF/0U+R873jRex5uK/ho5voQ/B90b
e6Xw+fNFV6v+99hxl2WZ41PjRLfP1ndb6YXdGHvOYlcco+eeg0xNPAaw+x4r
LGOPiKxT34wcU0OuNtG53bHHcsc1j4msg49L7JMS192jcBz6gdz+LX7uw+Ib
FI5J3587DtcYXYI9p2dqLf7oxPIMfkfV74W8CHqkXezYaHNkLzJK9fepfs/C
8exp4q8tHBPcX/T4xPclHktM+rjIPhv2NX4jPnmzxM9ODHNOZvtptujziX2s
48SvLWzj9Sxs4+OL4m8TO28XOX7+RepYHb7zdYVjlAeKHpvYHyeW/lXqtvjS
u8SWe9gDbyOnI9sf6ME2wV4intE2cr8DSvviY9EdKh/q+kT0qzDeN8ksU5kL
zAl0FDHDPVXfqHCcdnjhe6FzOR6W+l8cqfbXpP6erRPHBFgjIFbZv/BzEHt8
unAs/Trd96LC6wnE64an/v7tdO15ql/L/xJdwpiNHd/5JXIslP96feqx0Vbt
p0fuBzv4g/A9+a7jUs8p5hZ+PesLxBg/ZIxEXp8g5nls5LUE9Cr/swu2feQY
K2MR3UsMp2tifct/6yw6JvUYPgE7LXXM80Txd8WOkRJXvTO13kH/4JuzfkGM
lPjJPxWvlRBbKCOvj0xMHcPcg1hRZj//bNGLC78TMdu3IttayMQear+IsaP+
H1bb6XHwDSPraOLv63TuaNHzReern368f2G/89zI74Zvio+KrF8cWZ8cW7HP
ga+L/lgS6o9j3Gb2zfcSfUP3fF3lKv5D4lhBH9HXdY8L6Ac9oHKh+IWi96rt
5NjHaeoYw8DEvjU+NrqHeOzFkWMRbxWORZwoOk3XPaByGfMwtj7ifYl1oH9O
q9i+wc4ZJXpy5rY5tLDPix2yoY6vUNtLicOXjk1uJ1qrtH2CnXJ1bH3N8fbi
n4gc2yVegwyYqn5qxY7xos+IhaLbr+TzpI6/Xa732qR0fWddt1jtF6kcEfs7
8w2wG+pl/l9R5rU2xvRO4fvynYllsdZDLP6/8QElVom9+Ejkudo6tNkvzFvq
iGNio2CrTBE/uPT6xh+l34f3wj4bUjoeMKW0rMJfwycdpuPTVL9P1f4eft/8
YD9hRz2uvvbJPC6iEIt4NLKP1z7IJmQFOg/dx/rKP4F/S/WzYutZ+kavYj+g
W7EJ8QfxC+Og4xoE2fN2kHVJbFmPnH8htPlE/BmZ1xdaZPabfgzX3h9sxQmi
p6KnI8dgJxWOYYzL3d+xseXMfpl9LNaRbsy8XnOM3vv6zH5WI/E1Ytv5xJ+x
H7D3sAOw+TfjuUSbp36n59S+c+r3/jixj4DPgY/SJMSEiQ0jw7F/iKfeXLjP
m0QPyOyHsZaFXkW//uevwKNnB6X2j4i/zg96YIH4Zpn9V3zfXWP7p9gGg9Tv
05F93p6ZYwWHiu6t49N1/kr9/21yyxDmYBrsPdYIh4jfKjbfR+f6qs1Lue3W
iUFWEL9rEWTGRcz72DGXq2LPK/i/Csd/zlPbdYVjIpeLv1N8B113kMZey9jf
vy4iMzw/fi/fhxhj38L/j/+YlrZBGUvbYS+o1Bc/FVs02HKzKrbJmbesX9wb
eObvejtddAPde4vC56eIDg32If+3V5jDzF/0J/X4hveGeuQn85j5jH5iPC0I
Y/Xm1DqRNQdss3fDe52UmWetuXO4FjkwJnMMcAYxtsz27VGZn5NnqyF+RpBF
xLBmaWw9quu2wmYTP4V3SfxtF8S2Q+oEu7R2Ynvgo9jf7Z3YbbBdXi68XneJ
+rk9s884N7X/2EfnlxceA0vCv8bH7Ibc0n/oEPt90fdTQxti0W2CHzFabV9I
vZ58SubxwPMzhmqGMdYt6PSdg33UOrP9gx20MtixrJnyP4k58o+/jxzbuj78
7/phDPTQtX9Ets85hx0/LPxzxgEyGlvoz/A/uxbWaacWjpstC/3zTr+E91qe
+Rk6ZrZVkDnYLlPCmGHO5rHv9XAYV6vDP8NGYC2BdYSFga8G+nHg8ZGJvRHP
uzL2GGiufrrFvoY2nQPfrOL1W2wa7JlTQj+s7R4b6rEjt1Zfu4hfEebyyvCd
n87Ms07BN8fe+Cn1v9kx/Pd7Cs+LD9Htme3/Y8L/JDaNLiYejG3JPPw12PPY
9aznPxc5HoXsxE9BPp4XfBbG2eXBPt9E9f0z+zTE0JATjIt9M9vutCE2dEji
Pq7OPHZqhXazI68xYzciM/B9mF/TCsdNWQdsn3guoiPGq1Rj+zXEMYnZEa8j
blcN/PjQD+v1x8SOGSG77+SZYj8DMTfej7U73hccA6YbcbhG4dzgzLFD8AxX
Zj5/WOLzB4f2TUP/m1bcJ2Zik8SxOmJ2XL8idxzrAsZ47NgWx8S34DcP/TQP
z0nMkmuJ9V2VOd4GjuKszOMI/Mglsd+d39+J9ZWKx3Ya1rBYy8K22jbYmay7
E6vARkX3oqf5Z8xdxhbjCttvy9ixkXML+6asvdKmZrDbzstsq/ZLPMa3iD3O
t4m9jta94lgSMSX0C/KFvpEhfTLrKdbaWM/fMly7MjwDugldgc5A36FLs9gy
nPtsHtq/Uhibgd/BHAd7wfigDp8ZP3lV+CZ8Gxxh+pwWZAnzHB2GfYHNgV/2
c+AbBB5fHfsEv5zridkeF3sNmn65dl1oT4wYm+lafCW927+R7TDuWQnvwrzA
hmP9Ym7hf740jIf2YQxcUXpN4zHRQZljuZeLDswcQ74sUGLKdE3sHh6754bY
6/fEm4jJ7xUbP3ZLZjzGxMzx731jx8CJve0feOrhicURiwWjk4U2B4R6MD8H
hvHNc+0T+ufZuBe4HexE4ibYTHsHfYReIqb9TOQ4P/3D0+fyEIcnHs+awLOR
11CJe8MTy323sIwgJnyDytzI8aVfgq+Nz32jjl+M7PMSE5gTOeb8c5AbyA/W
EnhmbDJ89hcix6zwQeHRVXeH+YDuwxenH/QZMXbkIWsT/Be+IdgkxsLuYTy8
hrwSP0t0WZB1yLw1uW0KfGhizvgTG+X+lnxT3pfzXFuv4u/QMHznF4JdSn/M
9bZhviNT2wXZi33L+AEb9mduXYfvjkxC9iFD4Y8OMorYdpvYY+fc1Pdn7Zp1
H+JsT4i+ntifwJ7rG2JlxMzOih2XW4/tiBxXIqaErYzORL9gf/Dfwaxh0+0Y
+xxzGZv7P/urdpjXR6e+F/dk7ZJnwO+4I/c4wv5fjxkLYxJ5WT/MF8Yb/gmx
QdbK6sWO+z0V5tVM0S7q/x21XZR4LR2bCXupZWq7C/sLGxgbEfsQexAe//nt
wvIK+7qH2jUV/1hmHAFYvhYVt+N6bCrq8P3w9yaGevq8R7RHbLv8psx6Cfwj
tgA2AXbFbZkxU3+kxj11CfV9gp8OXg+MA9izwyr2cU6IjZ98E7mNzCqM9SIu
jY1xTIghEEvAj8fexdZ9InP7mZmfi+fD/58QnpXnpA/6Qmfgp/JevDdr2XfH
/g48/6RwL9ZRuIZnoL5buHZhiCewJo5dOSTIeXQT2MQdImM7JqqcHHsenBDm
ArId2xRMHfba8bFttr2CjGNOg+25LLYtwBoxfgt+yofB/nlH/+6jwmM/yW0X
YMfXrdgOAfuFHQ5+c3D45ksK+z5ci47Cnmse5h12T4sgSwYGGYhNRDyXuYpP
QP/YINh09IldR3/9w7Mxl9HfY4P8HhDk+cgwBhgLYEY6xo4PtCg8Zr5Fh8bG
AtInOFq+DRhFxkzn8C8ejI0BxRbsmbgOnAS6gPdkjBEzQV/wjYjvExcZWjqe
DN4GLC86/IzQz6OZnwfMar/wr5gPvF+n8Dz9wrW8A7HAcbF9bTBXd4T/NTw2
HoBYPNiA0bFj8qx9w2PvPkRMlrnJe6WOYXyk97hfxxPEP49fULqfc3Ovq4Cf
qZVbtuD7EdNH5+Kr9A3/+qrw/YfnljnIOr4B34LYETb/1eGbLESWxL7fi6nH
CLgD5vvNYR5xT+JZxLLWpo6LPcR6Ye45Suzu39TrjY+mnlvMMeYa8Tzieqxd
rUsd13s49Rzj3/Pf99A7viLaQHSD3N+bGB335RnQU4/GXq/Bx5sYdP0dmdd6
RoQ2XxaOob2du+3I0J41H7CNYDgYmxf+f3NhWPindzMWRSdnnq/Tw5ydGWQI
fi6+JjFN7Mzlwd98UfeqW7o9PBMFPCX3JC5IfBA7tVPhuN87hWUvMgp50SqM
IcbPJ7F55v63YS4gR5kHd8b/z38inrveF4stZ5DJ9M39kON8s6nhmyAPp4R7
5an/4SA94zuMLcZM4rFxQxgPN+SOQ3xd+FvwTcAkESOkPTKa9U7WPWkD9gae
WNnSYO9NUh/3h/fn3ZGHPA9janFhbPaiYG/fF56TtveH5wefje2NDc6/pQ02
Of+c9R/sEPQnehSdiH6ER5+C38LOZR0K+xjcMmtJYOfg8c3xj18JPDh+ZABr
SX/k/vbE+2uFNa+tEl/3UugHn5t4DetJrOOyngtGhTn0WJhH0McDz3obc/Sa
0nMWnCgxGTD39DE72NFzY6+j0T9re/wDvuus8G1TPUeSGJdZn/US7ELWxjPr
/RWiq2LjCP+TT/8G+TYvcX8/ZB6bjFHGLutCUWJszfuZMXIfBr+J2CXfEWwN
tgZrjsgWYjrIUJ6Vtb8luuaM1D7EN4nxxl/G9gF4pznhvbYvff9DqpZrfBvi
RSuC71+zML6KOTo393ru57p2I9GPgxxC7m1cOh62QPxnsdswT/fMPbZpzxz6
JMhlYt08D+3ni74Ve132n8J20t+ir2Xu89XMcT/asIZ7EHFY1T+cuMCTa4F/
RWxqdNDXxFmYxzwnOQfzwzMsCXMZeY/cx4asp3N/i6+ND5Q5zn2D+m6f+h/x
r56L/W+INc8KOgL829LImCrWkbFL6ZNvV0fnhqjNGF37aWHd83mwwReFOQsO
68lw7fWhHrnGNVy7ceb35zuAM+P84tAGHOOb4v8sPBfWhfnwk9r9Exs/TP3K
MKe+zDwXyV3g/6+IPVZ+U/lV5TPdY3zuccsYRlYyLpHR32X+rmCTR4Z6xipr
v6vDeP45Ns6PeM6Nudd549LjfVVowxzneZAByIzfg9yYEPqhrpp5LIMBQH4j
95HtzQvbG2Cw8TORj6zHELc4N3bsYrPM85q1e2xy4nH1w/yFZ86QW0JsgTV1
bCfiShyvCTY2tvaqMF85RhedH1sfseaNbTVPtEVqW571W873CW0mhPfADpkY
+ukVZFvf8C/qlP7O4wNeCNnzUWYeHPvNOndpaYz2uNK4aNbxwDj0L435HV0a
aw6m8R/8ax2vE32l9NrwenxTYSzx9xVjrlg3Zf0U/PQlpfHUt5ceN9j32A3d
A89zrg3jCv7rzJgfsF2blsbaf66+Ly6N0R4j2k30I/Xxqe4zIfezgYsnZ2qt
6N+iW6l8FxtzCG7/6/C+4IE3UpvnSo/rb2OvMW9eWt9xrwNTywlwHIvU9iHx
z/L9c8sB5AZrc2tir9PRN/f4KnzXv8K9lgbKWjZt1oTjTzLbhuA1ttH1y2Pj
DL8XXRZ7zoO1YG3rgcJ5Ttip2Kitc+NjwcliH5AXQ37M6tIY2bP4P6VzGM4T
/V/A8/VhjpReoz1ftEPoB4zz2tK5JefyrUrjVs/mf5XO6/hSbdeAIcuMX/1E
ZTvVtxP9J/yPc0Q/K42HPqa0TTsmds7R76VxqGeC46oaU3iB+KWlcbSdSvv/
4DPBaX4bsLYn821LY6ZP5H+WxuyeIvpNwNF2FP2tNFa1l+jK0njW3qKjVH5K
jKmIq8YI9iNYKb5XaqzjbSo/Jl4/XVUaI3uG6Iulc0K+AKtJv4nxIS+Xznv5
SvyrpfPlvsFuKp2Xslj886XzVRZhg5fOUVmCrCqd3/IJa0ni/0ycT7RJ7ny3
50U/UP1mrC2U1k2sZ88TfV/Hm6r+cNGFKjXFHym6SGVr8W1EF7M2Jr4tepM5
wLpcadnNWD8JfVgaj96htB58Q303AaNXOh9moZ5hXum8wW9z+2v4XeQqvV46
f+w71c8tnRvzGfZabj1yPM9cOhdxKWt0KpdVPB7w0fCnyHV6qnSe0oe5Yxfr
Mduq343jit9xicq2OneUaPvcWOVjxT9TOvfpY9V9VRpDfwL2QmlcPm2+KI3v
53keCN/ntdwYMGQ9Nvv94Ru+mlvGguX6XM8wOXz/F3LPzU9V10rfZ9fc2AD+
y6Olc5beAhuWO++D7z82s4zGN0HOI4fBK22ZOpdquOraZvYlWL+6J/zTOepj
RmkdiP9yX/h3r4i/V/zmqe0i8H/4UjN1nOldaqqfAYXXZcHYsL56pJ41Uttb
SufUgGdqXBjHjq0E/q2F6s9RffvS+HPuy/0b584ZYV6DOZ+HviTml/v5kTmN
cue28F+ml87p2l304Ny5MIy990rnn7RijOTOl2GsPlI672u+6k7JnTfBvyPX
lJzTD7A/S2P3T2fuls7x6MYcLZ3jcVrpWEDHoKt/LY2D7yn6S2nsew/RLrlz
NJAbn5bGu/O+35fOAeiMzCmN++8iuqI0xr17aX8P24eY092lc7dmq7/lpXOW
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
/vPUOWXI8/8D0djQcw==
         "]], Polygon3DBox[CompressedData["
1:eJxNnHf8l9P7x+/3vT/IaCiUrUEIUVZ7iJRKJS1FRIuMQhRCw0gDyQoRRUNR
SoUiokRGWVklfCkyKuP3enrdf/weD8fnus667/d9zrnG67pOh/Qe1H5gGATB
WXEQ6L/gUv3vK/09SpXXJUHwuModonuoLlXb0jQI+ou+PQqCx/IgaCT+OvEH
qO1T8ftmQXBEKQie1Lh9yoLgHv3tovEN1edCjblK5VzRVdQn1JjLVL4Wf4z6
DFPfq9XeUfx+ao/Udp3mmyf6TdX/rvk/UV1L8W+pDBO9U2MqqO04ld9ED1Td
Zo0/RfPdKP4Cvd948fVV/4rGLxHfT/xt6j9V/GDxT4ivKr6e+Gc15l6NXaW6
LhrzoZ4/VPxRet5C0U2K319NbbPU/z3VDVD7fRoX6/eepXkOVPsulTGxvw/P
qyr6OfVfr79NNNczKqM05hu1z1X7Uo17Xe1X6m8H8ZXVXlLfBZr/SM0/VH3n
qP1b9X9e7cvU7w3xD6h+iNprq38f0c1Vf4Da/1QZqfFTVTdG7TPFL1TbcNVt
53uofwPxP4g/X/R7KneKrq05M9Vv07hnRT+kvyM1/k61dxD9oMot4u/SHINE
t1TfqqJ38E01/lq97/PqW0dtT2j89arbqrY6qjtFfc9Q2VP8/1SGqG2D+o8O
/Rvfz/xNJ6jP9YG/9U3q8xvrqfENVb+b2j9V3/Kqf1z04erTRe17iX9UfCv1
qSZ+p8oo1b2j9htET1T9bLXfK349e1Ft/4qP9cx9Nffz4nfX+jVX+2C1Hyx+
rtoX6Hc8o+cdrD5LVddB7TervbboRWq/XO0Hqr2vyj6i91X7mWp/We17a75K
4luJXyR+L/EPiv9C/CXiQ/Fv6e+xmvtFlRM0fg+9zwGiX1L9nmpvqbJL9Ws1
5m6N3VPtVdW+uJhvL9U1Vduc4v1X6e9xaj9R79NP9Msau0D0SyoVRb+pumPU
/oLKceIfEb+b6NkqR4u/RN+puebbU/wuzqrmv0X80eq3WL+3mvj24jPxD4s/
UmOeVt/XVU4TXVHtZ7DXivffW+9bTW1Liu/RSu3XqP1w8S9o/D4qX+nd1mns
S6IXq70ve1fPfkR8W/HDxNdU/4Xi26TeGzU4G+JPUwk1/8/iU80/iz2q+bqo
7i7Rh6n/efye2PPNU91jam/L/tUzXlb7paJvjbx/nlC/PTR2jsox6nux6pup
vZz4naIfUv+N4vuqX6TnzVafhzXfRWofx55XGSf+HpVX1KevxrRgf6r9L9FH
6xm5/v6ifi+KPlWlpLaf1DfRfNeprav6X626WHVfqN+Pmut/KhtFb9b3nCF6
gPqUFz1B7/Oh6AvU9y/NdYxKmeb4VX2Xip6o9o/U3kvtf4sfL/4D8T3F72L9
VJaLX60xO0W/yHpq/mv1/PNE36f+G9TeR/1Ler9h6tcd+R9aH6zQO7QX/bfq
/lDfSSofi+6ttn80XwvxV4o/RPzz4luKv0r8oeLncX5VIs35Pz3rT+SF6G5q
v0bPT9TnTtWfq/mPU915yA+Nv1r0YWqbr/4dxY9Ef7DXxXcSf6v4Y8Uv4fdr
fE+NL9N8fUW/rPdtJv4fZKT6BvpN6zTvB5F/3+Uas0bV6yOfz0M05iGNPVt1
f6vuYPaX+PKh5+umOcaq7QQ9bxmyU/wJ4h8Vn2v8ouK8XM7eYe3F1xX/mNrL
1H6F6t4VvyHyfpqEztLcl+gZLUX/rf6x6D/UPkV939D7P8DaqDQW/ZJKjdAy
9if1PZ3vqbatmj/TfAM0R2W1V1EZKHpP9Wmivv8W73NX6ud3U/8d4geovjXv
W/LvLWnMlaLnqhwr+nL1+07tp2m+m8QvY5+J/kR1F6uthcaUE/0je1j8/Xq/
bzX2CvU7iO+h9lHif9CYxmo/PbHsqC7+KtEnqiwqWYe/i8xA35QsY9E3MzX+
VvGbxNdVewXV3S5+C+8gukFi26Cixr+D/hX/dsk673Px5+g33iR+T+S23ucp
1dVXW3/Ot+gnVeqJ7yd+h+hT1W+F6JoqVUSforK8ZBunpui79fveKNlmulx0
K5Ve4n/V2AM0/zfqs1Xvtk1lE99KZYnoZSr7I3/1/ctr7Mn6XdXV/yTVLS75
G7+nOSaq1OJ8q25bbP1dWXxr8RtFT1CpyXku1ryunn9myb+1kuabrPkG6VnL
VQ4S3VbPOVvty5CZoserXw2N71HI0KYa31X0j6L3Y3+iH9R+qureF31T5vf7
XmMrlHk/lPH+Jb/vmapvhDxT3bXYE+rfUPzHoiuW2R6ooLYWqtsgupveaZfo
t1V3fmz7TUsU1Ct5/Z/Q96kSWPfzvLWxbRfWtKHGDkbvsR/FrxM9RHU19VsP
Ud3ZGvOknr9TbaNVJrNW2LSih6v9ddGTctsw2ExXi74C+ar2JqHP072FTYGN
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
         "]], Polygon3DBox[CompressedData["
1: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
         "]], 
        Polygon3DBox[{{2154, 1119, 988, 781, 780, 1681}, {2107, 1012, 858, 
         857, 1169, 1786}}]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1kD0vRFEQhufu4d6rUUpU++EGiUTB7nZ+gU6lUsiGaChkE61CNMJq/AMf
Pf9ArmIru6ho+AsS5eWZvEcxec+Z88ycd6a5fbCxXzOzJSIQT1xK4iwxqybN
lknOoruZ2Zh8kpvVgrhH+ALtEy+cf9Fb6i6Ie5gFb5iadakpOH+k4k+IS5gR
+kw8gJ3DzMN8wXxn6rGH3iT6y/14XfH/F2/X6CH8cSrOvdVz+RqQu0vED2IP
913GHv6/55tTZjPMt0O/Vd5fqW2jc7nmaeSq/YnzrsEP4atMO3Ffliv87H3c
fxlrO0H/dIP2N4rzun+fvYqz+t7G5DfxfWXaVT16cC/96NtnWuftFOYN7aXa
g+9ta0L+34P8um/fS5v6BrkhzAr6CTONdsi3gvoscj4yMX/ueEeE
         "]], Polygon3DBox[CompressedData["
1:eJwtkb8yQ2EQxffeL8n9vABDk1zGiP8RSTov4QEUCkZDodGqNGZEo1Si5wUy
RpMoIkNF4xn0uX5n9hY79+ye3f3Onpsfnu2fpma2SFSIuarZdWL2RnEATqLZ
BPwCd1kzGxIX4DyYdeBG9IzhP4h38C61JtwQvDdj9kX/Ff1L1Lpw33yf2N8n
Diq+r0GtTjSjv7kJ3giupU1tyneeOMnYQ57CvbKzDu4z/8iuIvV8G+6GfALf
Ajeic6r9MX9e81ukuchco25YDa69FX1O8/f0WvTb5MEx/UeZ+yNtObM78Ov0
z5Z5L/htt8RCcM16W7p0i24W3yUvqq5PXusm3TbNXNuo9E97tX8tuL/S9Ius
dnCt8ll+rxDPxA/8HfwyuBf9/z0krln65eNWcI8HpWbdIr91i97QW/JDGqSx
A/401/4PuQs/og==
         "]], 
        Polygon3DBox[{{1749, 802, 801, 120, 1611}, {1762, 806, 805, 150, 
         1636}, {1897, 1305, 1473, 709, 2035}, {1762, 165, 947, 1536, 2190}, {
         1756, 804, 803, 135, 1624}, {2046, 1482, 947, 165, 2047}, {1894, 
         1302, 1484, 721, 2048}}]}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLlGEYBuBnPIyH8ZTmiTzgQil0JoRgrCbUkPC4cTnuWgS6qE0FgyBE
G3etSly5E/oBLduEf8HS8lRa7dq1FLxehLm57uedbz6eb2aGnr5Yfp6JiB15
XRWR+hzzSoXV2Yg2Z0v6jLOPdRHN+qCzbdZ6v6B/0R8xZ15kL1d4m3dkTZ9m
Jd2Lmyxzi8+4y1f8xLfc42h9RLE6okd6pcp5E5vlSPZdc8yvPOE3nvKAZzzk
T/6S7/pnO/6Tc/MPc0Z/75le1kaM6EfOPpgvvH+s/+YJ//CUf3nG/64f1zvk
vh1z7JZ3esaOXfot6ZQJZzc5IP1SNPexUS7d5665XW+Qgn6D9ZLX21gnY3or
szLp/qt2GGaZ3VxgA0vMMs8aDjDv95r2TOuer9W8wCnzvHu1mGfT98knbOIM
c3ycduRU2o1v7FryWavEhv4g/d5pP3NRL6X99Hv6Q90lMa7XcN1QSP8lvaKP
6l7Rp29lrv93V654OWg=
       "]], 
      Line3DBox[{1611, 120, 2088, 799, 800, 2100, 801, 802, 2101, 803, 804, 
       2102, 805, 806, 2190, 1536, 807, 808, 2099, 809, 810, 811, 2097, 812, 
       813, 814, 1534, 2098, 815, 816, 2096, 818, 782, 225, 1694, 210, 423, 
       1680, 195, 758, 422, 1665, 180, 1651, 165, 1636, 150, 1624, 135, 
       1611}], Line3DBox[{987, 212, 819, 820, 1535, 821, 822, 794, 401, 645, 
       211, 629, 424, 987}]}, {
      Line3DBox[{1539, 2005, 2006, 1977, 1982, 1000, 1983, 1934, 1935, 1904, 
       2178, 2342, 1695, 2020, 1984, 1985, 1821, 2344, 1916, 1696, 1820, 1767,
        1823, 1917, 1697, 1822, 2162, 2192, 1825, 1918, 1698, 1824, 2163, 
       2193, 1827, 1919, 1699, 1826, 2322, 1768, 1829, 1920, 2106, 2345, 1828,
        1769, 1831, 1921, 2323, 1700, 1830, 1770, 2194, 1701, 1832, 1771, 
       2195, 1702, 1833, 2164, 2196, 1703, 1834, 2165, 2197, 1704, 1835, 2166,
        2198, 1705, 1836, 2324, 1772, 1706, 1837}], Line3DBox[CompressedData["
1:eJwNzTlOgmEUBdBnAg4LEGmpTDRBRBEncANULsHWRKKFQ2MhTmBj51DZElSU
RApL3AAuxFl7T3Fy733h+8msVVc3BiKiQmIwosMf6ZGIlaGIR/2XMbtsP+jX
wxF7lOy2faXvsmzf25f6j1y072TK2yX9W5+Xk/aZbLDAl/ucnHCvy1OKfLqP
us3qJxxTYD8RkZdHHDLDhf/cYVq/9W5LfsicbMlx39nU3/Vn+USX7WTEi8zy
yg3r5Py+JvscMMWbtz15TpN/LAApUQ==
       "]], 
      Line3DBox[{1541, 2034, 2056, 1782, 1900, 1962, 1988, 1383, 1856, 1979, 
       1989, 1783, 1975, 2183, 2308, 2002, 1901, 1991, 1857, 2021, 1420, 1990,
        1980, 1981, 1784, 1907, 1715, 1858, 1166, 1908, 1716, 1859, 2329, 
       1785, 1909, 1717, 1860, 2330, 1786, 2107, 2309, 1861, 1787, 2108, 2310,
        1862, 1788, 2109, 2311, 1863, 1789, 2203, 1718, 1864, 2170, 2204, 
       1719, 1865, 2331, 1790, 1720, 1866, 2332, 1791, 1721, 1867, 2333, 1792,
        1722, 1542}], 
      Line3DBox[{706, 765, 343, 708, 1311, 411, 669, 356, 1426, 603, 357, 497,
        265, 1312, 412, 358, 604, 1427, 266, 1543, 2312, 267, 1544, 2313, 268,
        1271, 361, 269, 1272, 362, 270, 1273, 363, 271, 1274, 364, 1275, 272, 
       365, 1276, 273, 366, 1277, 274, 367, 1278, 275, 1545}], 
      Line3DBox[{1547, 1869, 1995, 1870, 1458, 1546, 1871, 1992, 1872, 2355, 
       1548, 1993, 2055, 1793, 1994, 1200, 2022, 1937, 2007, 1963, 1794, 1868,
        1795, 1549, 1280, 1910, 1873, 1550, 2205, 1723, 1551, 2315, 1796, 
       1911, 1797, 2314, 1552, 1798, 1799, 2316, 1553, 1800, 1801, 2317, 1554,
        1802, 2249, 2171, 1555, 2172, 2250, 1803, 1556, 2318, 1804, 1805, 
       1557, 2319, 1806, 1807, 1558, 2320, 1808, 1809, 1559}], 
      Line3DBox[{1561, 1874, 1875, 2338, 1560, 1876, 1996, 1283, 1562, 2008, 
       2009, 2251, 726, 1563, 653, 677, 474, 640, 533, 2353, 1912, 1877, 1564,
        1388, 1965, 1565, 2206, 2110, 2252, 1566, 2111, 2253, 1567, 2112, 
       2254, 1568, 2113, 2255, 1569, 2114, 2256, 1570, 2115, 2257, 1571, 2207,
        1724, 1572, 2208, 1725, 1573}], 
      Line3DBox[{1577, 2209, 1726, 1575, 2210, 1727, 1579, 2058, 2211, 1728, 
       2059, 1810, 2023, 2024, 2081, 1729, 2025, 1941, 2026, 2361, 2179, 1881,
        1967, 1968, 1730, 1902, 2176, 2212, 1913, 1731, 1584, 2213, 1044, 
       1586, 2214, 1732, 1588, 2215, 1733, 1590, 2216, 1734, 1592, 2217, 1735,
        1594, 2218, 1736, 1596, 2219, 1737, 1598, 2221, 2092}], 
      Line3DBox[{1599, 2089, 2220, 1597, 2267, 2123, 1595, 2266, 2122, 1593, 
       2265, 2121, 1591, 2264, 2120, 1589, 2263, 2119, 1587, 2262, 2118, 1585,
        2261, 1043, 1583, 1880, 1966, 2354, 2175, 1582, 1997, 1998, 1879, 
       1352, 1940, 1581, 1938, 1964, 1939, 1878, 2061, 2060, 1580, 2186, 2260,
        2057, 1578, 2259, 2117, 1574, 2258, 2116, 1576}], 
      Line3DBox[{1601, 2124, 2268, 1600, 2222, 1739, 1602, 2223, 1740, 1603, 
       2015, 2224, 1741, 2016, 2173, 2225, 1976, 2003, 2010, 1742, 2004, 1953,
        2350, 1954, 1882, 2063, 1743, 2062, 2366, 2036, 2037, 2125, 2362, 
       1604, 1055, 1605, 2226, 1744, 1606, 2227, 1745, 1607, 2228, 1746, 1608,
        2229, 1747, 1609, 2230, 1748, 1610, 2231, 2093}], 
      Line3DBox[{1613, 2126, 2269, 1612, 2127, 2270, 1614, 2232, 1750, 1615, 
       2233, 1751, 1616, 2177, 2234, 2065, 2074, 2075, 1883, 1942, 2348, 1811,
        1956, 1932, 1933, 1903, 2339, 1955, 1884, 1885, 2128, 2334, 1617, 
       2129, 2271, 1618, 1067, 1619, 2235, 1752, 1620, 2236, 1753, 1621, 2237,
        1754, 1622, 2238, 1755, 1623, 2239, 2094}], 
      Line3DBox[{1626, 2130, 2272, 1625, 2131, 2273, 1627, 2132, 2274, 1628, 
       2240, 1757, 1629, 2367, 2064, 1758, 2066, 2368, 1812, 2013, 2027, 2029,
        2028, 1886, 2180, 2356, 1999, 1813, 1887, 2068, 2069, 2369, 2067, 
       2038, 2039, 2133, 2363, 1630, 2134, 2275, 1631, 1079, 1632, 2241, 1759,
        1633, 2242, 1760, 1634, 2243, 1761, 1635, 2244, 2095}], 
      Line3DBox[{1638, 2135, 2276, 1637, 2136, 2277, 1639, 2137, 2278, 1640, 
       2138, 2279, 1641, 2245, 1763, 1642, 2358, 2011, 2014, 2012, 2054, 1643,
        2184, 2321, 1814, 2030, 1815, 1943, 2340, 1644, 2041, 1888, 2040, 
       1889, 2372, 1645, 2042, 2043, 2364, 1646, 2139, 2280, 1647, 1092, 1648,
        2246, 1764, 1649, 2247, 1765, 1650, 2103}], 
      Line3DBox[{1653, 2140, 2281, 1652, 2141, 2282, 1654, 2142, 2283, 1655, 
       2143, 2284, 1656, 2144, 2285, 1657, 2370, 2070, 2071, 1658, 2371, 2072,
        1816, 1890, 1817, 2032, 1944, 2335, 1969, 1945, 1958, 1818, 1957, 
       1819, 1946, 2341, 1659, 2045, 1891, 2044, 1892, 2336, 1660, 2145, 2286,
        1661, 2146, 2287, 1662, 1105, 1663, 2248, 1766, 1664, 2104}], 
      Line3DBox[{1667, 2147, 2288, 1666, 2148, 2289, 1668, 2149, 2290, 1669, 
       2150, 2291, 1670, 2151, 2292, 1671, 2152, 2293, 1672, 2359, 2017, 2031,
        2077, 2082, 2076, 2360, 1673, 2018, 2033, 2019, 1893, 1948, 1970, 
       1947, 2357, 1674, 1971, 1972, 1914, 2294, 2174, 1675, 2050, 2295, 2185,
        1676, 2188, 2296, 2084, 1677, 2153, 2297, 1678, 1117, 1679, 2375, 
       2191}], Line3DBox[{2091, 2090, 2298, 2189, 1681, 2154, 2299, 1682, 
       2155, 2300, 1683, 2156, 2301, 1684, 2157, 2302, 1685, 2158, 2303, 1686,
        2159, 2304, 2305, 1687, 1898, 1915, 1960, 2351, 2182, 1688, 1949, 
       1959, 1950, 1896, 2181, 2349, 1951, 1689, 2052, 2053, 2051, 2187, 2373,
        2078, 1690, 2086, 2087, 2374, 2085, 2073, 1691, 2160, 2306, 1692, 
       2161, 2307, 1693, 1530, 2105}]}, {
      Line3DBox[{561, 228, 1823, 306, 241, 1906, 428, 254, 1907, 429, 358, 
       360, 1868, 277, 612, 372, 677, 286, 678, 376, 1878, 287, 2023, 683, 
       655, 2224, 916, 1064, 2233, 927, 1075, 2240, 938, 2279, 1086, 951, 
       2284, 1098, 964, 2291, 1110, 977, 2301, 1121, 990}], 
      Line3DBox[{827, 1405, 1131, 1227, 1132, 2192, 1229, 1342, 1148, 1243, 
       1149, 2199, 1245, 1348, 1165, 1259, 1166, 1323, 1182, 1427, 1183, 1325,
        1280, 1314, 1281, 1327, 1387, 2353, 1284, 1316, 1285, 1463, 1368, 
       1286, 1352, 1464, 1215, 1369, 1216, 1430, 1353, 2361, 1289, 1445, 1465,
        1217, 1444, 1218, 2225, 1400, 1291, 1292, 2234, 1492, 1490, 2367, 
       1491, 939, 1087, 2245, 952, 2285, 1099, 965, 2292, 1111, 978, 2302, 
       1122, 991}], 
      Line3DBox[{828, 568, 1228, 1133, 2193, 1231, 459, 1244, 1150, 1247, 467,
        1260, 2329, 1167, 1324, 1184, 2312, 1185, 868, 1023, 2205, 880, 1388, 
       1462, 1389, 1390, 2354, 1287, 1317, 1288, 2212, 1328, 540, 1318, 500, 
       2350, 1290, 479, 1293, 2348, 481, 1295, 740, 1493, 2368, 1219, 1442, 
       1440, 2358, 1441, 953, 1496, 2370, 1497, 966, 2293, 1112, 979, 2303, 
       1123, 992}], 
      Line3DBox[{829, 1407, 1408, 1230, 2322, 1135, 1233, 1343, 1344, 1246, 
       2325, 1152, 1249, 1349, 1350, 1261, 2330, 1169, 857, 1186, 2313, 1188, 
       1326, 1201, 2315, 1203, 881, 1031, 2206, 893, 1043, 2213, 905, 1474, 
       1489, 2366, 1476, 1477, 1478, 1479, 1319, 1371, 2339, 1378, 1370, 1296,
        1391, 1436, 1392, 1297, 2356, 1355, 1466, 1354, 1467, 1447, 1448, 
       2321, 1446, 1450, 1449, 1299, 1499, 2371, 1500, 1498, 1221, 1468, 1451,
        2359, 1452, 980, 2304, 1124, 993}], 
      Line3DBox[{832, 1137, 1235, 1003, 2194, 833, 1154, 1251, 1009, 2326, 
       849, 1171, 1264, 2311, 1014, 860, 1190, 1273, 1019, 871, 1205, 2317, 
       1026, 884, 2254, 1034, 896, 2263, 1046, 2215, 908, 1056, 2226, 919, 
       1067, 930, 2275, 1078, 942, 1481, 2364, 1090, 956, 1301, 2336, 1102, 
       969, 2294, 1222, 1503, 1504, 1505, 983, 2349, 1364, 1373, 1223, 1322, 
       1340, 1376, 1341, 1396}], 
      Line3DBox[{834, 1138, 1236, 1004, 2195, 835, 1155, 1252, 1010, 2200, 
       850, 1172, 1265, 1015, 2203, 861, 1191, 1274, 1020, 872, 2249, 1206, 
       1027, 885, 2255, 1035, 897, 2264, 1047, 2216, 909, 1057, 2227, 920, 
       1068, 2235, 931, 1079, 943, 2280, 1091, 957, 2286, 1103, 970, 2295, 
       1485, 1115, 984, 2373, 1516, 1307, 1508, 1510, 1511, 996}], 
      Line3DBox[{836, 1139, 1237, 1140, 2196, 837, 1156, 1253, 1157, 2201, 
       851, 1173, 1266, 1174, 2204, 862, 1192, 1275, 1193, 873, 2250, 1207, 
       1208, 886, 2256, 1036, 898, 2265, 1048, 2217, 910, 1058, 2228, 921, 
       1069, 2236, 932, 1080, 2241, 944, 1092, 958, 2287, 1104, 971, 2296, 
       1517, 1518, 1519, 1520, 2374, 1506, 1509, 1507, 997}], 
      Line3DBox[{838, 1141, 1238, 1142, 2197, 839, 1158, 1254, 1159, 2202, 
       852, 1175, 1267, 2331, 1176, 863, 1194, 1276, 1195, 874, 1209, 2318, 
       1210, 887, 2257, 1037, 899, 2266, 1049, 2218, 911, 1059, 2229, 922, 
       1070, 2237, 933, 1081, 2242, 945, 1093, 2246, 959, 1105, 972, 2297, 
       1116, 985, 2306, 1127, 998}], 
      Line3DBox[{840, 1143, 1239, 1144, 2198, 841, 1160, 1255, 2327, 1161, 
       853, 1177, 1268, 2332, 1178, 864, 1196, 1277, 1197, 875, 1211, 2319, 
       1212, 888, 1038, 2207, 900, 2267, 1050, 2219, 912, 1060, 2230, 923, 
       1071, 2238, 934, 1082, 2243, 946, 1094, 2247, 960, 1106, 2248, 973, 
       1117, 986, 2307, 1128, 999}], 
      Line3DBox[{842, 1145, 1240, 2324, 1146, 843, 1162, 1256, 2328, 1163, 
       854, 1179, 1269, 2333, 1180, 865, 1198, 1278, 1199, 876, 1213, 2320, 
       1214, 889, 1039, 2208, 901, 1526, 2220, 2221, 1521, 1527, 2231, 1522, 
       1528, 2239, 1523, 1529, 2244, 1533}], 
      Line3DBox[{988, 1119, 2299, 975, 1108, 2289, 962, 1096, 2282, 949, 1084,
        2277, 936, 1073, 2273, 925, 1062, 2270, 914, 2222, 1052, 903, 2210, 
       1041, 2259, 891, 1029, 1283, 878, 1022, 1413, 2355, 1279, 867, 1425, 
       1456, 1424, 1426, 1270, 1423, 1438, 1432, 1431, 2308, 1310, 1164, 1365,
        1347, 845, 1399, 1417, 1398, 1397, 1241, 1416, 825, 2342, 1330, 1329, 
       1225, 1129, 1402, 1401}], 
      Line3DBox[{989, 1120, 2300, 976, 1109, 2290, 963, 1097, 2283, 950, 1085,
        2278, 937, 1074, 2274, 926, 2232, 1063, 915, 2223, 1053, 904, 2211, 
       1042, 1488, 1487, 2260, 892, 1030, 1443, 1439, 2251, 1486, 879, 1460, 
       1459, 1461, 1200, 1429, 1351, 1386, 1385, 1428, 1384, 1312, 1181, 1455,
        1422, 856, 1421, 1454, 1420, 1412, 1258, 1419, 846, 2343, 1006, 1242, 
       1147, 826, 1332, 2344, 1331, 1226, 1130, 1404, 1403}], 
      Line3DBox[{994, 1125, 2305, 981, 1113, 1453, 1515, 2360, 1514, 967, 
       1100, 1470, 1469, 1300, 1359, 2335, 1393, 1358, 954, 1088, 1379, 1338, 
       1320, 1357, 2340, 1356, 940, 1076, 2369, 1495, 1494, 1220, 928, 1065, 
       2334, 1294, 917, 1054, 2362, 1475, 906, 1044, 2261, 894, 1032, 2252, 
       882, 1024, 2314, 1202, 869, 1017, 1271, 1187, 858, 1012, 2309, 1262, 
       1168, 847, 1007, 2346, 1336, 1248, 1151, 830, 1001, 2345, 1333, 1232, 
       1134, 1406}], 
      Line3DBox[{995, 1126, 1472, 1471, 1306, 1375, 1395, 1374, 2351, 982, 
       1114, 1372, 1339, 1304, 1363, 1437, 2357, 1362, 968, 1101, 1394, 1321, 
       1361, 2341, 1360, 955, 1089, 1502, 1501, 2372, 1298, 941, 1077, 2363, 
       1480, 929, 1066, 2271, 918, 1055, 907, 2214, 1045, 2262, 895, 1033, 
       2253, 883, 1025, 2316, 1204, 870, 1018, 1272, 1189, 859, 1013, 2310, 
       1263, 1170, 848, 1008, 2347, 1337, 1250, 1153, 831, 2323, 1002, 1334, 
       1234, 1136, 1409}], 
      Line3DBox[{1308, 1380, 1434, 1381, 1224, 1414, 1415, 1000, 824, 1410, 
       1435, 1411, 1309, 1335, 2352, 1377, 1005, 844, 1345, 1382, 1346, 1257, 
       1383, 1418, 1011, 855, 1366, 1513, 1367, 1311, 1433, 1512, 1016, 866, 
       1457, 1458, 1313, 1021, 877, 1282, 2338, 1315, 1028, 890, 2258, 1040, 
       2209, 902, 2268, 1051, 913, 2269, 1061, 924, 2272, 1072, 935, 2276, 
       1083, 948, 2281, 1095, 961, 2288, 1107, 974, 2298, 1532, 1538}], 
      Line3DBox[{1525, 1530, 1524, 1531, 2375, 1537}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
//8B1N1ENA==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{379.16123346765715`, 283.0922843197322},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0, 10}, {0, 10}, {-76635.66865743282, 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-1.4352338580247788`, 2.683558670919954, 1.4793973883002605`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.890710135257015*^9, 3.8907101681666536`*^9}, {
  3.89071020487108*^9, 3.890710243454894*^9}, {3.8907105944375515`*^9, 
  3.890710603122673*^9}}]
}, Open  ]]
},
WindowSize->{815, 904},
WindowMargins->{{Automatic, 104}, {Automatic, 16}},
Magnification->1.8000001907348633`,
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (October 6, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 650, 16, 85, "Input"],
Cell[1232, 40, 589, 12, 42, "Message"],
Cell[1824, 54, 453, 10, 42, "Message"],
Cell[2280, 66, 126, 3, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2443, 74, 571, 17, 52, "Input"],
Cell[3017, 93, 699, 25, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3753, 123, 678, 19, 85, "Input"],
Cell[4434, 144, 751, 26, 139, "Output"]
}, Open  ]],
Cell[5200, 173, 159, 3, 52, "Input"],
Cell[CellGroupData[{
Cell[5384, 180, 391, 12, 52, "Input"],
Cell[5778, 194, 1973, 65, 267, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7788, 264, 390, 8, 52, "Input"],
Cell[8181, 274, 933, 21, 142, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9151, 300, 99, 1, 52, "Input"],
Cell[9253, 303, 74, 1, 51, "Output"]
}, Open  ]],
Cell[9342, 307, 140, 2, 52, "Input"],
Cell[CellGroupData[{
Cell[9507, 313, 600, 20, 166, "Input"],
Cell[10110, 335, 540, 21, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10687, 361, 996, 23, 149, "Input"],
Cell[11686, 386, 89, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11812, 393, 279, 8, 52, "Input"],
Cell[12094, 403, 296, 11, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12427, 419, 1339, 40, 228, "Input"],
Cell[13769, 461, 6271, 117, 576, "Output"]
}, Open  ]],
Cell[20055, 581, 141, 2, 52, "Input"],
Cell[CellGroupData[{
Cell[20221, 587, 768, 23, 149, "Input"],
Cell[20992, 612, 512, 11, 42, "Message"],
Cell[21507, 625, 512, 11, 42, "Message"],
Cell[22022, 638, 456, 10, 78, "Message"],
Cell[22481, 650, 591, 11, 113, "Message"],
Cell[23075, 663, 318, 10, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23430, 678, 770, 23, 149, "Input"],
Cell[24203, 703, 17347, 489, 2197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41587, 1197, 131, 2, 52, "Input"],
Cell[41721, 1201, 69, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41827, 1207, 830, 25, 149, "Input"],
Cell[42660, 1234, 17864, 490, 2242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60561, 1729, 97, 1, 52, "Input"],
Cell[60661, 1732, 17347, 489, 2197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78045, 2226, 915, 27, 149, "Input"],
Cell[78963, 2255, 5695, 169, 725, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84695, 2429, 819, 24, 149, "Input"],
Cell[85517, 2455, 1503, 36, 172, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87057, 2496, 273, 8, 52, "Input"],
Cell[87333, 2506, 635, 12, 113, "Message"],
Cell[87971, 2520, 297, 7, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88305, 2532, 295, 8, 52, "Input"],
Cell[88603, 2542, 569, 11, 113, "Message"],
Cell[89175, 2555, 570, 11, 113, "Message"],
Cell[89748, 2568, 750, 14, 113, "Message"],
Cell[90501, 2584, 535, 11, 78, "Message"],
Cell[91039, 2597, 89, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91165, 2604, 776, 23, 149, "Input"],
Cell[91944, 2629, 17345, 489, 2197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109326, 3123, 227, 7, 52, "Input"],
Cell[109556, 3132, 810, 14, 170, "Message"],
Cell[110369, 3148, 810, 14, 170, "Message"],
Cell[111182, 3164, 810, 14, 170, "Message"],
Cell[111995, 3180, 535, 11, 78, "Message"],
Cell[112533, 3193, 89, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112659, 3200, 315, 9, 52, "Input"],
Cell[112977, 3211, 5845, 165, 721, "Output"]
}, Open  ]],
Cell[118837, 3379, 180, 4, 85, "Input"],
Cell[119020, 3385, 1208, 28, 181, "Input"],
Cell[120231, 3415, 3438, 96, 717, "Input"],
Cell[123672, 3513, 302, 9, 57, "Input"],
Cell[CellGroupData[{
Cell[123999, 3526, 300, 7, 52, "Input"],
Cell[124302, 3535, 592, 12, 100, "Message"],
Cell[124897, 3549, 87, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125021, 3556, 297, 7, 52, "Input"],
Cell[125321, 3565, 394, 8, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125752, 3578, 673, 19, 149, "Input"],
Cell[126428, 3599, 20914, 352, 386, "Output"]
}, Open  ]],
Cell[147357, 3954, 143, 2, 52, "Input"],
Cell[CellGroupData[{
Cell[147525, 3960, 217, 4, 85, "Input"],
Cell[147745, 3966, 95, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147877, 3972, 770, 21, 149, "Input"],
Cell[148650, 3995, 586, 11, 133, "Message"],
Cell[149239, 4008, 1781, 48, 172, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151057, 4061, 101, 3, 52, "Input"],
Cell[151161, 4066, 533, 10, 113, "Message"],
Cell[151697, 4078, 169, 5, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151903, 4088, 1337, 36, 181, "Input"],
Cell[153243, 4126, 17979, 311, 591, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171259, 4442, 925, 25, 149, "Input"],
Cell[172187, 4469, 145682, 2372, 537, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
